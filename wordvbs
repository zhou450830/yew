Sub Main()
' 定义变量
Dim i As Long, j As Long, k As Long, M As Long, n As Long, intLevel As Integer
Dim intPrevLevel As Integer, intSectionNum As Integer
Dim objRange As Range, objPara As Paragraph, objStyle As Style, objTOC As TableOfContents
Dim objTable As Table, objFSO As Object, objFolder As Object, objFile As Object
Dim strFolderPath As String, strMacroFile As String, strStyleFile As String
Dim strStyleName As String, strReg As String, strReplace As String, strTOCStyle As String
Dim strCellStyle As String, strLangName As String
Dim arrStyles() As Variant, arrFormats() As Variant, arrTOCStyles() As Variant, arrCellFormats() As Variant
Dim vDirectory As String, vFile As String

' 指定所需处理文件夹路径
strFolderPath = "D:\SampleFolder\"

' 获取word对象
On Error Resume Next
Set objWord = GetObject(, "Word.Application")
If Err.Number <> 0 Then
    Set objWord = CreateObject("Word.Application")
End If
objWord.Visible = True
On Error GoTo 0

' 循环处理文件夹内的 doc、docx 文件
Set objFSO = CreateObject("Scripting.FileSystemObject")
Set objFolder = objFSO.GetFolder(strFolderPath)
For Each objFile In objFolder.Files
    If Right(objFile.Name, 4) = "docx" Or Right(objFile.Name, 3) = "doc" Then
        ' 打开文档
        Set objDoc = objWord.Documents.Open(FileName:=objFile.Path)

        ' 调用处理函数
        Call ProcessDocument(objDoc)

        ' 保存并关闭文档
        objDoc.Save
        objDoc.Close SaveChanges:=True
    End If
Next objFile

' 退出word
objWord.Quit
Set objWord = Nothing
End Sub

' 处理单个文档的函数
Sub ProcessDocument(objDoc As Document)
' 设置文档样式和格式
Call SetDocumentStyle(objDoc, "Arial", 9, wdColorBlack, wdColorWhite)
Call SetDocumentFormat(objDoc, False, False, True, True, False, False)

' 调整目录样式和设置目录
Call SetTOCStyle(objDoc, "黑体", 14, wdColorAuto, wdColorWhite)
Call CreateTOC(objDoc)

' 调整表格样式
Call SetTableStyle(objDoc, "宋体", 10, wdColorBlack, wdColorWhite)
Call SetCellFormat(objDoc, False, False, True, True)

' 调整段落样式和处理图片
Call SetParagraphStyle(objDoc, "宋体", 12, wdColorBlack, False, False, False, False)
Call ProcessImages(objDoc)
End Sub

' 设置文档样式
Sub SetDocumentStyle(objDoc As Document, strFontName As String, intFontSize As Integer, clrText As Long, clrBackground As Long)
With objDoc.Styles(wdStyleNormal)
.Font.Name = strFontName
.Font.Size = intFontSize
.Font.Color = clrText
.NoSpaceBetweenParagraphsOfSameStyle = True
.ParagraphFormat.LineSpacingRule = wdLineSpaceMultiple
.ParagraphFormat.LineSpacing = 1.5
.ParagraphFormat.SpaceBefore = 0
.ParagraphFormat.SpaceAfter = 0
.ParagraphFormat.Alignment = wdAlignParagraphLeft
End With
With objDoc.Background
.Color = clrBackground
End With
End Sub

' 设置文档格式
Sub SetDocumentFormat(objDoc As Document, blnPageNumber As Boolean, blnMargin As Boolean, blnHeader As Boolean, blnFooter As Boolean, blnTOC As Boolean, blnIndent As Boolean)
With objDoc.PageSetup
If blnMargin Then
.TopMargin = CentimetersToPoints(2.54)
.BottomMargin = CentimetersToPoints(2.54)
.LeftMargin = CentimetersToPoints(3)
.RightMargin = CentimetersToPoints(3)
End If
.Orientation = wdOrientPortrait
.Gutter = 0
.MirrorMargins = False
.HeaderDistance = IIf(blnHeader, CentimetersToPoints(1.25), 0)
.FooterDistance = IIf(blnFooter, CentimetersToPoints(1.25), 0)
.PageWidth = CentimetersToPoints(21)
.PageHeight = CentimetersToPoints(29.7)
.FirstPageTray = wdPrinterDefaultBin
.OtherPagesTray = wdPrinterDefaultBin
If blnPageNumber Then
.PageNumbers.Add PageNumberAlignment:=wdAlignPageNumberCenter, _
FirstPage:=True, _
PageNumberStyle:=wdPageNumberStyleArabic
End If
End With

' 设置缩进和自动编号
objDoc.Range.ListFormat.ApplyListTemplateWithLevel ListTemplate:= _
    ListGalleries(wdNumberGallery).ListTemplates(1), ContinuePreviousList:=False, _
    ApplyTo:=wdListApplyToWholeList, DefaultListBehavior:= _
    wdWord10ListBehavior, ApplyLevel:=True, ApplyBulletDefault:=False, _
    ApplyNumberDefault:=True
objDoc.Range.Paragraphs.LeftIndent = IIf(blnIndent, CentimetersToPoints(0.5), 0)
objDoc.Range.Paragraphs.SpaceBeforeAuto = False
objDoc.Range.Paragraphs.SpaceAfterAuto = False
End Sub

' 创建目录
Sub CreateTOC(objDoc As Document)
Dim tocRange As Range
Set tocRange = objDoc.Range(Start:=0, End:=0)
tocRange.MoveEnd wdStory
tocRange.Fields.Add Range:=tocRange, Type:=wdFieldEmpty, _
Text:="TOC \o ""1-3"" \h \z \u", PreserveFormatting:=True
Set tocRange = Nothing
End Sub

' 设置目录样式
Sub SetTOCStyle(objDoc As Document, strFontName As String, intFontSize As Integer, clrText As Long, clrBackground As Long)
Set objTOC = objDoc.TablesOfContents(1)
objTOC.TabLeader = wdTabLeaderDots
With objTOC.Range.Font
.Name = strFontName
.Size = intFontSize
.Color = clrText
End With
With objTOC.Range.ParagraphFormat
.LineSpacingRule = wdLineSpaceSingle
.LineSpacing = 1.5
.Alignment = wdAlignParagraphCenter
End With
objTOC.Range.Shading.BackgroundPatternColor = clrBackground
objTOC.Update
End Sub

' 设置表格样式
Sub SetTableStyle(objDoc As Document, strFontName As String, intFontSize As Integer, clrText As Long, clrBackground As Long)
For Each objTable In objDoc.Tables
With objTable
With .Range.Font
.Name = strFontName
.Size = intFontSize
.Color = clrText
End With
With .Range.ParagraphFormat
.LineSpacingRule = wdLineSpaceSingle
.LineSpacing = 1.5
.Alignment = wdAlignParagraphCenter
End With
.Range.Shading.BackgroundPatternColor = clrBackground
End With
Next
End Sub

' 设置表格单元格格式
Sub SetCellFormat(objDoc As Document, blnBorder As Boolean, blnBold As Boolean, blnItalic As Boolean, blnUnderline As Boolean)
For Each objTable In objDoc.Tables
For Each objRow In objTable.Rows
For Each objCell In objRow.Cells
With objCell.Range
If blnBorder Then
.Borders(wdBorderLeft).LineStyle = wdLineStyleSingle
.Borders(wdBorderRight).LineStyle = wdLineStyleSingle
.Borders(wdBorderTop).LineStyle = wdLineStyleSingle
.Borders(wdBorderBottom).LineStyle = wdLineStyleSingle
End If
With .Font
.Bold = blnBold
.Italic = blnItalic
.Underline = IIf(blnUnderline, wdUnderlineSingle, wdUnderlineNone)
End With
End With
Next objCell
Next objRow
Next objTable
End Sub

' 设置段落样式
Sub SetParagraphStyle(objDoc As Document, strFontName As String, intFontSize As Integer, clrText As Long, blnBold As Boolean, blnItalic As Boolean, blnUnderline As Boolean, blnPictureCaption As Boolean)
Dim objParagraph As Paragraph
Dim regEx As New RegExp

end sub


Sub FormatDocument()
    '定义变量
    Dim oPara As Paragraph
    Dim oRange As Range
    Dim oStyle As Style
    
    '遍历文档中的每一个段落
    For Each oPara In ActiveDocument.Paragraphs
        '根据大纲级别设置样式
        Select Case oPara.OutlineLevel
            Case wdOutlineLevel1
                Set oStyle = ActiveDocument.Styles("标题 1")
            Case wdOutlineLevel2
                Set oStyle = ActiveDocument.Styles("标题 2")
            Case wdOutlineLevel3
                Set oStyle = ActiveDocument.Styles("标题 3")
            Case wdOutlineLevel4
                Set oStyle = ActiveDocument.Styles("标题 4")
            Case wdOutlineLevel5
                Set oStyle = ActiveDocument.Styles("标题 5")
            Case wdOutlineLevel6
                Set oStyle = ActiveDocument.Styles("标题 6")
            Case wdOutlineLevel7
                Set oStyle = ActiveDocument.Styles("标题 7")
            Case wdOutlineLevel8
                Set oStyle = ActiveDocument.Styles("标题 8")
            Case wdOutlineLevel9
                Set oStyle = ActiveDocument.Styles("标题 9")
            Case Else
                Set oStyle = ActiveDocument.Styles("正文")
        End Select
        
        '将样式应用于段落
        Set oRange = oPara.Range
        oRange.Style = oStyle
    Next oPara
End Sub


'执行代码
Sub RunAll()
    FormatDocument
    AutoNumber
End Sub

Sub 文件夹格式()
    '进行格式设置。当运行此宏时，会弹出一个文件夹对话框，让用户选择待处理文件所在的文件夹。然后，此宏会遍历文件夹中的所有 Word 文档，针对每个文档执行以下操作：
    '设置文档页面，将页面方向设置为纵向、大小设置为 A4 纸张大小、边距设置为 2.5 厘米、页眉距离设置为 1 厘米、页脚距离设置为 0.5 厘米。
    '对文档中的所有段落统一设置格式，包括行间距、段前段后间距、字体、字号等。
    '针对不同级别的标题，分别设置其字号和加粗。
    '对文档中所有表格设置样式，包括自动调整列宽、表格外边框线样式、居中对齐等。
    '对图片标题设置样式，包括设置为加粗、设置字号为 10.5 号。
    '在执行上述操作时，代码还采用了一些 VBA 内置函数，如 CentimetersToPoints、LinesToPoints 等，用于将长度单位转换为磅数，并且使用了 VBScript.RegExp 类来匹配图片标题的样式

    Dim vDirectory As String
    Dim theParagraph As Paragraph, theStr$
    Dim reg As Object
    Dim wrs As Characters

    Dim oDoc As Document
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = "选择待处理文件所在的文件夹"
        .InitialFileName = "c:\"
        If .Show Then
            vDirectory = .SelectedItems(1) & "\"
        Else
            Exit Sub
        End If
    End With
    vFile = Dir(vDirectory & "*.*", vbNormal)
    Dim par As Paragraph
    Dim tabl As Table
    Do While vFile <> ""
        Application.ScreenUpdating = False
        Set oDoc = Documents.Open(FileName:=vDirectory & vFile)

        '设置文档页面
        Const PAGE_WIDTH As Single = 21 ' 定义页面宽度
        Const PAGE_HEIGHT As Single = 29.7 ' 定义页面高度
        Const TOP_MARGIN As Single = 2.5 ' 定义上边距
        Const BOTTOM_MARGIN As Single = 2.5 ' 定义下边距
        Const LEFT_MARGIN As Single = 2.5 ' 定义左边距
        Const RIGHT_MARGIN As Single = 2.5 ' 定义右边距
        Const HEADER_DISTANCE As Single = 1 ' 定义页眉与页面的距离
        Const FOOTER_DISTANCE As Single = 0.5 ' 定义页脚与页面的距离

        With oDoc.PageSetup
            .Orientation = wdOrientPortrait
            .PageWidth = CentimetersToPoints(PAGE_WIDTH)
            .PageHeight = CentimetersToPoints(PAGE_HEIGHT)
            .TopMargin = CentimetersToPoints(TOP_MARGIN)
            .BottomMargin = CentimetersToPoints(BOTTOM_MARGIN)
            .LeftMargin = CentimetersToPoints(LEFT_MARGIN)
            .RightMargin = CentimetersToPoints(RIGHT_MARGIN)
            .HeaderDistance = CentimetersToPoints(HEADER_DISTANCE)
            .FooterDistance = CentimetersToPoints(FOOTER_DISTANCE)
        End With

        '设置段落样式
        With oDoc.Content
            For Each par In .Paragraphs
                Select Case par.OutlineLevel
                    Case wdOutlineLevel1 To wdOutlineLevel3
                        par.Range.Font.Bold = True
                        par.Range.Font.Size = 16 - par.OutlineLevel + 1 '根据大纲级别设置字号
                        par.Range.Font.Name = "黑体"
                    Case wdOutlineLevel4 To wdOutlineLevel9
                        par.Range.Font.Bold = True
                        par.Range.Font.Size = 14
                        par.Range.Font.Name = "仿宋"
                    Case Else '其余段落为正文段落
                        With par.Range.ParagraphFormat
                            .LineSpacingRule = wdLineSpaceMultiple '统一设置为多倍行距
                            .LineSpacing = LinesToPoints(1.2)
                            .SpaceBeforeAuto = False
                            .SpaceBefore = LinesToPoints(0.5) '设置段前间距为0.5行
                            .SpaceAfter = LinesToPoints(0.5) '设置段后间距为0.5行
                        End With
                        With par.Range.Font
                            .Name = "宋体"
                            .Size = 14
                            .Bold = False
                        End With
                End Select
            Next
        End With

        '设置表格样式
        For Each tabl In oDoc.Tables
            With tabl
                '判断表格结构是否规则
                Dim isRegular As Boolean
                isRegular = True
                If .Rows.Count > 1 And .Columns.Count > 1 Then
                    Dim i, j As Integer
                    For i = 1 To .Rows.Count - 1
                        For j = 1 To .Columns.Count - 1
                            If .Cell(i, j).Width <> .Cell(i + 1, j).Width Or .Cell(i, j).Height <> .Cell(i, j + 1).Height Then
                                isRegular = False
                                Exit For
                            End If
                        Next
                        If Not isRegular Then
                            Exit For
                        End If
                    Next
                End If

                '设置表格样式
                With .Range
                    .Table.AutoFitBehavior (wdAutoFitWindow)
                    .Shading.BackgroundPatternColorIndex = wdWhite
                    .Borders.OutsideLineStyle = wdLineStyleSingle
                    .Borders.InsideLineStyle = wdLineStyleSingle
                    .Alignment = wdAlignParagraphCenter
                End With
            End With
        Next

        '设置图片标题样式
        Set reg = CreateObject("VBScript.RegExp")
        reg.Pattern = "^图\s*\d+[\.\s、]"
        For Each theParagraph In oDoc.Paragraphs
            theStr = theParagraph.Range.Text
            Set wrs = theParagraph.Range.Characters
            If reg.Test(theStr) Then '匹配成功，将其字体加粗，字号设置为10.5
                With wrs
                    .Font.Bold = True
                    .Font.Size = 10.5
                End With
            End If
        Next

        '保存并关闭文档
        oDoc.Save
        oDoc.Close
        vFile = Dir
    Loop
    Application.ScreenUpdating = True
    MsgBox "格式设置完毕！", vbInformation
End Sub
Sub 文件夹格式()

'让用户选择待处理的文件夹
Dim vDirectory As String
With Application.FileDialog(msoFileDialogFolderPicker)
    .Title = "选择待处理文件所在的文件夹"
    .InitialFileName = "c:\"
    If .Show Then
        vDirectory = .SelectedItems(1) & "\"
    Else
        Exit Sub
    End If
End With

'设置 Word 的页面大小和边距
Const PAGE_WIDTH As Single = 21
Const PAGE_HEIGHT As Single = 29.7
Const TOP_MARGIN As Single = 2.5
Const BOTTOM_MARGIN As Single = 2.5
Const LEFT_MARGIN As Single = 2.5
Const RIGHT_MARGIN As Single = 2.5
Const HEADER_DISTANCE As Single = 1
Const FOOTER_DISTANCE As Single = 0.5
Dim oDoc As Document
vFile = Dir(vDirectory & "*.*", vbNormal)
Do While vFile <> ""
    Application.ScreenUpdating = False
    Set oDoc = Documents.Open(FileName:=vDirectory & vFile)
    With oDoc.PageSetup
        .Orientation = wdOrientPortrait
        .PageWidth = CentimetersToPoints(PAGE_WIDTH)
        .PageHeight = CentimetersToPoints(PAGE_HEIGHT)
        .TopMargin = CentimetersToPoints(TOP_MARGIN)
        .BottomMargin = CentimetersToPoints(BOTTOM_MARGIN)
        .LeftMargin = CentimetersToPoints(LEFT_MARGIN)
        .RightMargin = CentimetersToPoints(RIGHT_MARGIN)
        .HeaderDistance = CentimetersToPoints(HEADER_DISTANCE)
        .FooterDistance = CentimetersToPoints(FOOTER_DISTANCE)
    End With
    
    '使用 Word 样式快速设置标题和正文段落的样式
    With oDoc.Styles(wdStyleHeading1)
        .Font.Name = "黑体"
        .Font.Size = 16
        .Font.Bold = True
    End With
    With oDoc.Styles(wdStyleHeading2)
        .Font.Name = "黑体"
        .Font.Size = 15
        .Font.Bold = True
    End With
    With oDoc.Styles(wdStyleHeading3)
        .Font.Name = "黑体"
        .Font.Size = 14
        .Font.Bold = True
    End With
    With oDoc.Styles(wdStyleNormal)
        .Font.Name = "宋体"
        .Font.Size = 12
        .ParagraphFormat.LineSpacingRule = wdLineSpaceMultiple '统一设置为多倍行距
        .ParagraphFormat.LineSpacing = LinesToPoints(1.2)
        .ParagraphFormat.SpaceBeforeAuto = False
        .ParagraphFormat.SpaceBefore = LinesToPoints(0.5) '设置段前间距为0.5行
        .ParagraphFormat.SpaceAfter = LinesToPoints(0.5) '设置段后间距为0.5行
        .ParagraphFormat.Alignment = wdAlignParagraphJustify
    End With
    
    '对所有表格进行样式调整
    Dim tbl As Table, a&, e&, i As Paragraph, j&, k&, x&, y&, z&, u&, v&, s&
    If Selection.Information(12) Then a = 1
    For Each tbl In oDoc.Tables
        If a = 1 Then Set tbl = Selection.Tables(1)
        '表格样式调整
        With tbl
            .Range.ParagraphFormat.Alignment = wdAlignParagraphCenter
            .Range.Font.Name = "宋体"
            .Range.Font.Size = 12
            .PreferredWidthType = wdPreferredWidthPercent
            .PreferredWidth = 100
            .Rows.HeightRule = wdRowHeightAtLeast
            .Rows.Height = CentimetersToPoints(0.9)
            .AutoFitBehavior (wdAutoFitContent)
            .AutoFitBehavior (wdAutoFitWindow)
            '表头加粗
            If .Rows.Count >= 2 And .Columns.Count >= 2 Then
                If Len(.Cell(2, 2).Range) > 2 Then
                    .Rows(1).Range.Font.Name = "黑体"
                    .Rows(1).Range.Font.Bold = True
                End If
            End If
        End With
        
        '删除单元格空白
        For Each c In tbl.Range.Cells
            For Each i In c.Range.Paragraphs
                If Asc(i.Range) = 13 And Len(i.Range) = 1 Then i.Range.Delete
            Next
            With c.Range.Paragraphs
                If .Count > 1 And Len(.Last.Range) = 2 Then .Last.Previous.Range.Characters.Last.Delete
            End With
        Next
        
        If a = 1 Then Exit For
    Next
    
    '清除 Word 文档中的多余空白
    For Each i In oDoc.Paragraphs
        If i.Range Like "*" & Chr(12) Then i.Range.Characters.Last.Delete
    Next
    
    '设置图片标题的样式
    Set reg = CreateObject("VBScript.RegExp")
    With reg
        .Pattern = "^图\d+\s+"
        For Each theParagraph In oDoc.Paragraphs
            theStr = theParagraph.Range
            If .test(theStr) Then
                theParagraph.Range.Font.Bold = True
                theParagraph.Range.Font.Size = 10.5
            End If
        Next
    End With
    Set reg = Nothing
    
    oDoc.Save
    oDoc.Close
    vFile = Dir
Loop
End Sub
