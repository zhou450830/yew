Sub 投标文件()
Dim t
t = Timer


For Each objStyle In ActiveDocument.Styles
On Error Resume Next
If objStyle.BuiltIn = False And objStyle.InUse = True Then
objStyle.Delete
End If
Next
' 清除格式
Selection.WholeStory
' Selection.ClearParagraphDirectFormatting
On Error Resume Next
Application.ScreenUpdating = False
'

With Selection.PageSetup '页面设置
.TopMargin = CentimetersToPoints(3.7) '顶端边距
.BottomMargin = CentimetersToPoints(3.5) '底端边距
.LeftMargin = CentimetersToPoints(2.8) '左边距
.RightMargin = CentimetersToPoints(2.6) '右边距

'.PageWidth = CentimetersToPoints(21) '页面宽度
'.PageHeight = CentimetersToPoints(29) '页面高度
End With

With Selection.Paragraphs '设置行距
.FirstLineIndent = CentimetersToPoints(0) '取消首行缩进
'.IndentFirstLineCharWidth 2 '首行缩进2个字符
' .Alignment = wdAlignParagraphCenter '段落居中
.Alignment = wdAlignParagraphLeft '左对齐
.LineSpacingRule = wdLineSpaceExactly '行距固定
.LineSpacingRule = wdLineSpace1pt5 '行距固定1pt5
' .LineSpacing = Word.Application.LinesToPoints(2.3) '行距为2.3倍行距 一行距=12

Selection.Range.HighlightColorIndex = wdNoHighlight '突出显示文本取消
End With
With ActiveDocument.Styles(wdStyleHeading1).Font
.Color = wdColorBlack
.Bold = True
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading2).Font
.Color = wdColorBlack
.Bold = True
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading3).Font
.Color = wdColorBlack
.Bold = True
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading4).Font
.Color = wdColorBlack
.Bold = True
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading5).Font
.Color = wdColorBlack
.Bold = True
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading6).Font
.Color = wdColorBlack
.Bold = False
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading7).Font
.Color = wdColorBlack
.Bold = False
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading8).Font
.Color = wdColorBlack
.Bold = False
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading9).Font
.Color = wdColorBlack
.Bold = False
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleNormal).Font
.Color = wdColorBlack
.Bold = False
.Size = 14
.Name = "新宋体"
.ColorIndex = wdBlack
End With

With Selection.Font '字体设置
.Name = "新宋体"
.Size = 12 '号字体
.ColorIndex = wdBlack '黑色
.Bold = False
End With

Application.Browser.Target = wdBrowseTable


For i = 1 To ActiveDocument.Tables.Count

    ActiveDocument.Tables.Item(i).Select

    With Selection

        '表格外边框
        .Borders.OutsideLineStyle = wdLineStyleSingle
        '表格内边框
        .Borders.InsideLineStyle = wdLineStyleSingle
        '表格内边框
        .Borders(wdBorderRight).Color = wdColorAutomatic
        .Borders(wdBorderLeft).Color = wdColorAutomatic
        .Borders(wdBorderTop).Color = wdColorAutomatic
        .Borders(wdBorderBottom).Color = wdColorAutomatic
        '表格居中
        .Rows.Alignment = wdAlignRowCenter
        End With
     Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = "^l"
        .Replacement.Text = "^p"
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = True
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
Next i
   
Selection.Find.Execute Replace:=wdReplaceAll
    '替换非标准引号为标准引号
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = """(*)"""
        .Replacement.Text = ChrW(8220) & "\1" & ChrW(8221)
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = True
    End With
   
    '修改小数点错误
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = "([0-9])。([0-9])"
        .Replacement.Text = "\1.\2"
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = True
    End With

Selection.Find.Execute Replace:=wdReplaceAll
         '去除半角空格
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = " "
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = True
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With

Selection.Find.Execute Replace:=wdReplaceAll
    '去除全角空格
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = "　"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = True
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With

'   清除段落前后空格
    For a = 1 To ActiveDocument.Paragraphs.Count
    Set sutRng = ActiveDocument.Paragraphs(a).Range
    sutRng.MoveEnd wdCharacter, -1
    sutRng.Text = Trim(sutRng.Text)
    sutRng.MoveEnd wdCharacter, 1
    ActiveDocument.Paragraphs(a).Range.Text = sutRng.Text
    Next a
        MsgBox " " & Round(Timer - t, 2) & " 秒！", vbOKOnly + vbExclamation, "计算宏运行所用时间"
End Sub

Sub PaperSetup()
    Dim s As Section
    For Each s In ActiveDocument.Sections
        With s.PageSetup
            If .Orientation = wdOrientPortrait Then
                .TopMargin = CentimetersToPoints(2.54)
                .BottomMargin = CentimetersToPoints(2.54)
                .LeftMargin = CentimetersToPoints(3.17)
                .RightMargin = CentimetersToPoints(3.17)
                .PageWidth = CentimetersToPoints(21)
                .PageHeight = CentimetersToPoints(29.7)
            Else
                .TopMargin = CentimetersToPoints(2.5)
                .BottomMargin = CentimetersToPoints(2.5)
                .LeftMargin = CentimetersToPoints(2.54)
                .RightMargin = CentimetersToPoints(2.54)
                .PageWidth = CentimetersToPoints(29.7)
                .PageHeight = CentimetersToPoints(21)
            End If
            .HeaderDistance = CentimetersToPoints(1.5)
            .FooterDistance = CentimetersToPoints(1.75)
        End With
    Next
End Sub

Sub 纵横转换()
    With Selection
        If .Type <> wdSelectionIP Then
            ActiveDocument.Range(Start:=.Start, End:=.Start).InsertBreak Type:=wdSectionBreakNextPage
            .Start = .Start + 1
            If .End <> ActiveDocument.Content.End Then
                ActiveDocument.Range(Start:=.End, End:=.End).InsertBreak Type:=wdSectionBreakNextPage
            End If
        End If
        With .PageSetup
            If .Orientation = wdOrientPortrait Then .Orientation = wdOrientLandscape Else .Orientation = wdOrientPortrait
        End With
    End With
End Sub
Sub SetNumber()

    With ListGalleries(wdOutlineNumberGallery).ListTemplates(1).ListLevels(1)
        .NumberFormat = "%1"
        .TrailingCharacter = wdTrailingTab
        .NumberStyle = wdListNumberStyleArabic
        .NumberPosition = CentimetersToPoints(0)
        .Alignment = wdListLevelAlignLeft
        .TextPosition = CentimetersToPoints(0.76)
        .TabPosition = wdUndefined
        .ResetOnHigher = 0
        .StartAt = 1
        With .Font
            .Bold = wdUndefined
            .Italic = wdUndefined
            .StrikeThrough = wdUndefined
            .Subscript = wdUndefined
            .Superscript = wdUndefined
            .Shadow = wdUndefined
            .Outline = wdUndefined
            .Emboss = wdUndefined
            .Engrave = wdUndefined
            .AllCaps = wdUndefined
            .Hidden = wdUndefined
            .Underline = wdUndefined
            .Color = wdUndefined
            .Size = wdUndefined
            .Animation = wdUndefined
            .DoubleStrikeThrough = wdUndefined
            .Name = ""
        End With
        .LinkedStyle = "标题 1"
    End With
    With ListGalleries(wdOutlineNumberGallery).ListTemplates(1).ListLevels(2)
        .NumberFormat = "%1.%2"
        .TrailingCharacter = wdTrailingTab
        .NumberStyle = wdListNumberStyleArabic
        .NumberPosition = CentimetersToPoints(0)
        .Alignment = wdListLevelAlignLeft
        .TextPosition = CentimetersToPoints(1.02)
        .TabPosition = wdUndefined
        .ResetOnHigher = 1
        .StartAt = 1
        With .Font
            .Bold = wdUndefined
            .Italic = wdUndefined
            .StrikeThrough = wdUndefined
            .Subscript = wdUndefined
            .Superscript = wdUndefined
            .Shadow = wdUndefined
            .Outline = wdUndefined
            .Emboss = wdUndefined
            .Engrave = wdUndefined
            .AllCaps = wdUndefined
            .Hidden = wdUndefined
            .Underline = wdUndefined
            .Color = wdUndefined
            .Size = wdUndefined
            .Animation = wdUndefined
            .DoubleStrikeThrough = wdUndefined
            .Name = ""
        End With
        .LinkedStyle = "标题 2"
    End With
    With ListGalleries(wdOutlineNumberGallery).ListTemplates(1).ListLevels(3)
        .NumberFormat = "%1.%2.%3"
        .TrailingCharacter = wdTrailingTab
        .NumberStyle = wdListNumberStyleArabic
        .NumberPosition = CentimetersToPoints(0)
        .Alignment = wdListLevelAlignLeft
        .TextPosition = CentimetersToPoints(1.27)
        .TabPosition = wdUndefined
        .ResetOnHigher = 2
        .StartAt = 1
        With .Font
            .Bold = wdUndefined
            .Italic = wdUndefined
            .StrikeThrough = wdUndefined
            .Subscript = wdUndefined
            .Superscript = wdUndefined
            .Shadow = wdUndefined
            .Outline = wdUndefined
            .Emboss = wdUndefined
            .Engrave = wdUndefined
            .AllCaps = wdUndefined
            .Hidden = wdUndefined
            .Underline = wdUndefined
            .Color = wdUndefined
            .Size = wdUndefined
            .Animation = wdUndefined
            .DoubleStrikeThrough = wdUndefined
            .Name = ""
        End With
        .LinkedStyle = "标题 3"
    End With
    With ListGalleries(wdOutlineNumberGallery).ListTemplates(1).ListLevels(4)
        .NumberFormat = "%1.%2.%3.%4"
        .TrailingCharacter = wdTrailingTab
        .NumberStyle = wdListNumberStyleArabic
        .NumberPosition = CentimetersToPoints(0)
        .Alignment = wdListLevelAlignLeft
        .TextPosition = CentimetersToPoints(1.52)
        .TabPosition = wdUndefined
        .ResetOnHigher = 3
        .StartAt = 1
        With .Font
            .Bold = wdUndefined
            .Italic = wdUndefined
            .StrikeThrough = wdUndefined
            .Subscript = wdUndefined
            .Superscript = wdUndefined
            .Shadow = wdUndefined
            .Outline = wdUndefined
            .Emboss = wdUndefined
            .Engrave = wdUndefined
            .AllCaps = wdUndefined
            .Hidden = wdUndefined
            .Underline = wdUndefined
            .Color = wdUndefined
            .Size = wdUndefined
            .Animation = wdUndefined
            .DoubleStrikeThrough = wdUndefined
            .Name = ""
        End With
        .LinkedStyle = "标题 4"
    End With
    With ListGalleries(wdOutlineNumberGallery).ListTemplates(1).ListLevels(5)
        .NumberFormat = "%1.%2.%3.%4.%5"
        .TrailingCharacter = wdTrailingTab
        .NumberStyle = wdListNumberStyleArabic
        .NumberPosition = CentimetersToPoints(0)
        .Alignment = wdListLevelAlignLeft
        .TextPosition = CentimetersToPoints(1.78)
        .TabPosition = wdUndefined
        .ResetOnHigher = 4
        .StartAt = 1
        With .Font
            .Bold = wdUndefined
            .Italic = wdUndefined
            .StrikeThrough = wdUndefined
            .Subscript = wdUndefined
            .Superscript = wdUndefined
            .Shadow = wdUndefined
            .Outline = wdUndefined
            .Emboss = wdUndefined
            .Engrave = wdUndefined
            .AllCaps = wdUndefined
            .Hidden = wdUndefined
            .Underline = wdUndefined
            .Color = wdUndefined
            .Size = wdUndefined
            .Animation = wdUndefined
            .DoubleStrikeThrough = wdUndefined
            .Name = ""
        End With
        .LinkedStyle = "标题 5"
    End With
    With ListGalleries(wdOutlineNumberGallery).ListTemplates(1).ListLevels(6)
        .NumberFormat = "%1.%2.%3.%4.%5.%6"
        .TrailingCharacter = wdTrailingTab
        .NumberStyle = wdListNumberStyleArabic
        .NumberPosition = CentimetersToPoints(0)
        .Alignment = wdListLevelAlignLeft
        .TextPosition = CentimetersToPoints(2.03)
        .TabPosition = wdUndefined
        .ResetOnHigher = 5
        .StartAt = 1
        With .Font
            .Bold = wdUndefined
            .Italic = wdUndefined
            .StrikeThrough = wdUndefined
            .Subscript = wdUndefined
            .Superscript = wdUndefined
            .Shadow = wdUndefined
            .Outline = wdUndefined
            .Emboss = wdUndefined
            .Engrave = wdUndefined
            .AllCaps = wdUndefined
            .Hidden = wdUndefined
            .Underline = wdUndefined
            .Color = wdUndefined
            .Size = wdUndefined
            .Animation = wdUndefined
            .DoubleStrikeThrough = wdUndefined
            .Name = ""
        End With
        .LinkedStyle = "标题 6"
    End With
    With ListGalleries(wdOutlineNumberGallery).ListTemplates(1).ListLevels(7)
        .NumberFormat = "%1.%2.%3.%4.%5.%6.%7"
        .TrailingCharacter = wdTrailingTab
        .NumberStyle = wdListNumberStyleArabic
        .NumberPosition = CentimetersToPoints(0)
        .Alignment = wdListLevelAlignLeft
        .TextPosition = CentimetersToPoints(2.29)
        .TabPosition = wdUndefined
        .ResetOnHigher = 6
        .StartAt = 1
        With .Font
            .Bold = wdUndefined
            .Italic = wdUndefined
            .StrikeThrough = wdUndefined
            .Subscript = wdUndefined
            .Superscript = wdUndefined
            .Shadow = wdUndefined
            .Outline = wdUndefined
            .Emboss = wdUndefined
            .Engrave = wdUndefined
            .AllCaps = wdUndefined
            .Hidden = wdUndefined
            .Underline = wdUndefined
            .Color = wdUndefined
            .Size = wdUndefined
            .Animation = wdUndefined
            .DoubleStrikeThrough = wdUndefined
            .Name = ""
        End With
        .LinkedStyle = "标题 7"
    End With
    With ListGalleries(wdOutlineNumberGallery).ListTemplates(1).ListLevels(8)
        .NumberFormat = "%1.%2.%3.%4.%5.%6.%7.%8"
        .TrailingCharacter = wdTrailingTab
        .NumberStyle = wdListNumberStyleArabic
        .NumberPosition = CentimetersToPoints(0)
        .Alignment = wdListLevelAlignLeft
        .TextPosition = CentimetersToPoints(2.54)
        .TabPosition = wdUndefined
        .ResetOnHigher = 7
        .StartAt = 1
        With .Font
            .Bold = wdUndefined
            .Italic = wdUndefined
            .StrikeThrough = wdUndefined
            .Subscript = wdUndefined
            .Superscript = wdUndefined
            .Shadow = wdUndefined
            .Outline = wdUndefined
            .Emboss = wdUndefined
            .Engrave = wdUndefined
            .AllCaps = wdUndefined
            .Hidden = wdUndefined
            .Underline = wdUndefined
            .Color = wdUndefined
            .Size = wdUndefined
            .Animation = wdUndefined
            .DoubleStrikeThrough = wdUndefined
            .Name = ""
        End With
        .LinkedStyle = "标题 8"
    End With
    With ListGalleries(wdOutlineNumberGallery).ListTemplates(1).ListLevels(9)
        .NumberFormat = "%1.%2.%3.%4.%5.%6.%7.%8.%9"
        .TrailingCharacter = wdTrailingTab
        .NumberStyle = wdListNumberStyleArabic
        .NumberPosition = CentimetersToPoints(0)
        .Alignment = wdListLevelAlignLeft
        .TextPosition = CentimetersToPoints(2.79)
        .TabPosition = wdUndefined
        .ResetOnHigher = 8
        .StartAt = 1
        With .Font
            .Bold = wdUndefined
            .Italic = wdUndefined
            .StrikeThrough = wdUndefined
            .Subscript = wdUndefined
            .Superscript = wdUndefined
            .Shadow = wdUndefined
            .Outline = wdUndefined
            .Emboss = wdUndefined
            .Engrave = wdUndefined
            .AllCaps = wdUndefined
            .Hidden = wdUndefined
            .Underline = wdUndefined
            .Color = wdUndefined
            .Size = wdUndefined
            .Animation = wdUndefined
            .DoubleStrikeThrough = wdUndefined
            .Name = ""
        End With
        .LinkedStyle = "标题 9"
    End With
        
End Sub

Sub 多级标题自动编号()

'''初始化

    With ActiveDocument
        '
        '删除所有域
        .Fields.Unlink

        '列表编号/LISTNUM域转文本
         .ConvertNumbersToText

        '回车符/手动换行符=>段落标记
        .Content.Find.Execute "[^13^11]", , , 1, , , , , , "^p", 2

        .Select

        '清除格式/删除段落首尾空格
        With Selection
           ' .ClearFormatting
            CommandBars.FindControl(ID:=122).Execute
            CommandBars.FindControl(ID:=123).Execute

            '删除所有空格
            With .Find
                .ClearFormatting
                .Replacement.ClearFormatting
                .Execute "^w", , , 0, , , , , , "", 2
                .Execute "　", , , 0, , , , , , "", 2
            End With

            

             .ParagraphFormat.CharacterUnitFirstLineIndent = 2
        End With
    End With

End Sub

Sub 替换() '
'
 '更改所有硬回车为软回车
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = "^l"
        .Replacement.Text = "^p"
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = True
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With

   
Selection.Find.Execute Replace:=wdReplaceAll
    '替换非标准引号为标准引号
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = """(*)"""
        .Replacement.Text = ChrW(8220) & "\1" & ChrW(8221)
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = True
    End With
   
    '修改小数点错误
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = "([0-9])。([0-9])"
        .Replacement.Text = "\1.\2"
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = True
    End With

End Sub
Sub 删除无效样式()
    For Each objStyle In ActiveDocument.Styles
    On Error Resume Next
    If objStyle.BuiltIn = False And objStyle.InUse = True Then
    objStyle.Delete
    End If
    Next
    End Sub

Sub 删除页脚横线()
With ActiveDocument.Sections(1).Headers(wdHeaderFooterPrimary).Range '进入页脚编辑状态
.Delete '删除页眉中的内容
.ParagraphFormat.Borders(wdBorderBottom).LineStyle = wdLineStyleNone '段落下边框线
End With
End Sub

Sub 删除页眉横线()
    ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
    Selection.ParagraphFormat.Borders(wdBorderBottom).LineStyle = wdLineStyleNone
    ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
End Sub

Sub 删除空格()
 
'   清除段落前后空格
    For a = 1 To ActiveDocument.Paragraphs.Count
    Set sutRng = ActiveDocument.Paragraphs(a).Range
    sutRng.MoveEnd wdCharacter, -1
    sutRng.Text = Trim(sutRng.Text)
    sutRng.MoveEnd wdCharacter, 1
    ActiveDocument.Paragraphs(a).Range.Text = sutRng.Text
    Next a

End Sub

 Sub 去除半角空格()
Selection.Find.Execute Replace:=wdReplaceAll
         '去除半角空格
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = " "
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = True
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
End Sub

 Sub 去除全角空格()
    Selection.Find.Execute Replace:=wdReplaceAll
    '去除全角空格
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = "　"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = True
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
End Sub

Sub 删除空行()
    Dim i As Paragraph
    For Each i In ActiveDocument.Paragraphs
        If Asc(i.Range) = 13 Then i.Range.Delete
    Next
End Sub

 Sub 清除空行，空格()
'   清除空行，空格
    
    Dim i As Paragraph, n As Long
    Application.ScreenUpdating = False
    For Each i In ActiveDocument.Paragraphs
    If Len(i.Range) = 1 Then
    i.Range.Delete
    n = n + 1
    End If
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
    .Text = "　"
    .Replacement.Text = ""
    .Wrap = wdFindContinue
    End With
    With Selection.Find
    .Text = "vbTab"
    .Replacement.Text = ""
    .Wrap = wdFindContinue
    End With
    With Selection.Find
    .Text = " "
    .Replacement.Text = ""
    .Wrap = wdFindContinue
    End With
    With Selection.Find
        .Text = "^t"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = True
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute Replace:=wdReplaceAll
    Next
    Application.ScreenUpdating = True
    Options.AutoFormatAsYouTypeDeleteAutoSpaces = True
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = " "
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = True
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute Replace:=wdReplaceAll
    
    Selection.WholeStory
    With ActiveDocument.Styles(wdStyleNormal).Font
        If .NameFarEast = .NameAscii Then
            .NameAscii = ""
        End If
        .NameFarEast = ""
    End With
End Sub

Sub call宏()
Call 删除无效样式
Call 删除页眉横线
Call
Call
Call
Call
Call
Call
Call
Call
Call
Call
Call
Call
Call
Call
End Sub
Sub 文件夹格式()
    Dim t
    t = Timer
    
    Dim vDirectory As String
    Dim theParagraph As Paragraph, theStr$
    Dim reg As Object
    Dim wrs As Characters

    Dim oDoc As Document
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = "选择待处理文件所在的文件夹"
        .InitialFileName = "c:\"
        If .Show Then
            vDirectory = .SelectedItems(1) & "\"
        Else
            Exit Sub
        End If
    End With
    vFile = Dir(vDirectory & "*.*", vbNormal)
    Dim par As Paragraph
    Dim tabl As Table
    Do While vFile <> ""
        Application.ScreenUpdating = False
        Set oDoc = Documents.Open(FileName:=vDirectory & vFile)
        '设置文档页面
        With oDoc.PageSetup
            .Orientation = wdOrientPortrait
            .PageWidth = CentimetersToPoints(21)
            .PageHeight = CentimetersToPoints(29.7)
            .TopMargin = CentimetersToPoints(2.5)
            .BottomMargin = CentimetersToPoints(2.5)
            .LeftMargin = CentimetersToPoints(2.5)
            .RightMargin = CentimetersToPoints(2.5)
            .HeaderDistance = CentimetersToPoints(1)
            .FooterDistance = CentimetersToPoints(0.5)
        End With
        oDoc.Select
        With Selection
            .ParagraphFormat.LineSpacingRule = wdLineSpaceExactly
            .ParagraphFormat.SpaceBeforeAuto = False
            .ParagraphFormat.SpaceAfter = 10
            .ParagraphFormat.SpaceBefore = 10
            .Range.Font.Name = "宋体" '设置正文中文字体为宋体
            .Range.Font.Name = "Times New Roman" '设置正文英文和数字字体为宋体
            .Range.Font.Size = 12 '设置正文字号为小四号
            .Range.Font.Bold = False
            .ParagraphFormat.LineSpacingRule = wdLineSpaceMultiple
            .ParagraphFormat.LineSpacing = LinesToPoints(1.2)
       
        End With
        

        For Each par In oDoc.Paragraphs
           '根据大纲级别，单独设置其字号并加粗
            If (par.OutlineLevel = wdOutlineLevel1) Then
                par.Range.Font.Bold = True
                par.Range.Font.Size = 16
               
            ElseIf (par.OutlineLevel = wdOutlineLevel2 Or par.OutlineLevel = wdOutlineLevel2) Then
                par.Range.Font.Bold = True
                par.Range.Font.Size = 14
              
             End If
        Next
        
        '设置表格样式
        For Each tabl In oDoc.Tables
            tabl.AutoFitBehavior (wdAutoFitWindow)
            tabl.Borders.OutsideLineStyle = wdLineStyleSingle
            tabl.Borders.OutsideLineWidth = wdLineWidth025pt
            tabl.Range.Rows.Alignment = wdAlignRowCenter
            tabl.Select
            Selection.Font.Size = 10.5
            Selection.ParagraphFormat.Alignment = wdAlignParagraphCenter
            Selection.MoveUp wdLine, 1, wdMove
            Selection.EndKey wdLine, wdExtend
            Selection.Font.Size = 10.5
            Selection.Font.Bold = True
        Next
        
      '设置图片标题样式
    Set reg = CreateObject("VBScript.RegExp")
        With reg
            .Pattern = "^图\d+\s+"
            For Each theParagraph In oDoc.Paragraphs
                theStr = theParagraph.Range
                If .test(theStr) Then
                    theParagraph.Range.Font.Bold = True
                     theParagraph.Range.Font.Size = 10.5
                End If
            Next
        End With
        Set reg = Nothing



        oDoc.Save
        oDoc.Close
        vFile = Dir
    Loop
    MsgBox ("共用时" & Timer - t & "秒")
End Sub

Sub 页面设置()

'   清除格式
    Selection.WholeStory
    '  Selection.ClearParagraphDirectFormatting
    On Error Resume Next
    Application.ScreenUpdating = False
'

With Selection.PageSetup              '页面设置
.TopMargin = CentimetersToPoints(3.7)      '顶端边距
.BottomMargin = CentimetersToPoints(3.5)   '底端边距
.LeftMargin = CentimetersToPoints(2.8)     '左边距
.RightMargin = CentimetersToPoints(2.6)    '右边距

'.PageWidth = CentimetersToPoints(21)   '页面宽度
'.PageHeight = CentimetersToPoints(29)  '页面高度
End With

 With Selection.Paragraphs '设置行距
' .FirstLineIndent = CentimetersToPoints(0) '取消首行缩进
.IndentFirstLineCharWidth 2 '首行缩进2个字符
' .Alignment = wdAlignParagraphCenter '段落居中
.Alignment = wdAlignParagraphLeft '左对齐
 .LineSpacingRule = wdLineSpaceExactly '行距固定
.LineSpacingRule = wdLineSpace1pt5 '行距固定1pt5
' .LineSpacing = Word.Application.LinesToPoints(2.3)  '行距为2.3倍行距 一行距=12

Selection.Range.HighlightColorIndex = wdNoHighlight '突出显示文本取消

With Selection.Font  '字体设置
        .Name = "宋体"
        .Size = 12 '号字体
        .ColorIndex = wdBlack '黑色

End With
End Sub

Sub 页面设置2()

'   首行缩进
    
    With Selection.ParagraphFormat
 
        .LeftIndent = CentimetersToPoints(0)
 
        .RightIndent = CentimetersToPoints(0)
 
        .SpaceBefore = 0
 
        .SpaceBeforeAuto = False
 
        .SpaceAfter = 0
 
        .SpaceAfterAuto = False
 
        .LineSpacingRule = wdLineSpaceSingle
 
        .Alignment = wdAlignParagraphJustify
 
        .WidowControl = False
 
        .KeepWithNext = False
 
        .KeepTogether = False
 
        .PageBreakBefore = False
 
        .NoLineNumber = False
 
        .Hyphenation = True
 
        .FirstLineIndent = CentimetersToPoints(0)
 
        .OutlineLevel = wdOutlineLevelBodyText
 
        .CharacterUnitLeftIndent = 0
 
        .CharacterUnitRightIndent = 0
 
        .CharacterUnitFirstLineIndent = 2
 
        .LineUnitBefore = 0
 
        .LineUnitAfter = 0
 
        .MirrorIndents = False
 
        .TextboxTightWrap = wdTightNone
 
        .AutoAdjustRightIndent = True
 
        .DisableLineHeightGrid = False
 
        .FarEastLineBreakControl = True
 
        .WordWrap = True
 
        .HangingPunctuation = True
 
        .HalfWidthPunctuationOnTopOfLine = False
 
        .AddSpaceBetweenFarEastAndAlpha = True
 
        .AddSpaceBetweenFarEastAndDigit = True
 
        .BaseLineAlignment = wdBaselineAlignAuto
 
    End With
With Selection.Font  '字体设置
        .Name = "宋体"
        .Size = 10.5 '号字体
        .ColorIndex = wdBlack '黑色
   
End Sub

Sub 页面设置3()

'   设置页面
    With Selection.PageSetup
        .LineNumbering.Active = False
        .Orientation = wdOrientPortrait
        .TopMargin = CentimetersToPoints(2.54)
        .BottomMargin = CentimetersToPoints(1.4)
        .LeftMargin = CentimetersToPoints(2.2)
        .RightMargin = CentimetersToPoints(1.3)
        .Gutter = CentimetersToPoints(0)
        .HeaderDistance = CentimetersToPoints(1.3)
        .FooterDistance = CentimetersToPoints(2)
        .PageWidth = CentimetersToPoints(21)
        .PageHeight = CentimetersToPoints(29.7)
        .FirstPageTray = wdPrinterDefaultBin
        .OtherPagesTray = wdPrinterDefaultBin
        .SectionStart = wdSectionNewPage
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .VerticalAlignment = wdAlignVerticalTop
        .SuppressEndnotes = False
        .MirrorMargins = False
        .TwoPagesOnOne = False
        .BookFoldPrinting = False
        .BookFoldRevPrinting = False
        .BookFoldPrintingSheets = 1
        .GutterPos = wdGutterPosLeft
        .CharsLine = 39
        .LinesPage = 32
        .LayoutMode = wdLayoutModeGrid
    End With

        

End Sub

Sub 正文()
With Selection.ParagraphFormat
.CharacterUnitFirstLineIndent = 0
Selection.Style = ActiveDocument.Styles("正文")
Selection.Font.Size = 12
Selection.Font.Name = "宋体"
.CharacterUnitFirstLineIndent = 2
End With
End Sub
    
 Sub 字体()

'   设置段落
    If (ActiveDocument.Paragraphs.Count >= 1) Then
    ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
    Selection.MoveLeft Unit:=wdCharacter, Count:=1
    Selection.MoveDown Unit:=wdParagraph, Count:=1, Extend:=wdExtend
    Selection.ParagraphFormat.Alignment = wdAlignParagraphCenter
    Selection.Font.Name = "黑体"
    Selection.Font.Bold = wdToggle
    Selection.Font.Size = 22
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    End If
    
    If (ActiveDocument.Paragraphs.Count >= 2) Then
    Selection.MoveDown Unit:=wdParagraph, Count:=1, Extend:=wdExtend
    Selection.ParagraphFormat.Alignment = wdAlignParagraphCenter
    Selection.Font.Name = "黑体"
    Selection.Font.Bold = wdToggle
    Selection.Font.Size = 18
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    End If
    
    If (ActiveDocument.Paragraphs.Count >= 3) Then
    Selection.MoveDown Unit:=wdParagraph, Count:=ActiveDocument.Paragraphs.Count - 2, Extend:=wdExtend
    Selection.Font.Name = "黑体"
    Selection.Font.Size = 16
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    End If
    
'   加空段落
    ActiveDocument.Paragraphs(2).Range.InsertAfter Chr(13)

End Sub

With Selection.Font  '字体设置
        .Name = "宋体"
        .Size = 10.5 '号字体
        .ColorIndex = wdBlack '黑色
 
End With

  

End Sub

Sub 页码设置()

ActiveDocument.Sections(1).Footers(wdHeaderFooterPrimary).PageNumbers.Add PageNumberAlignment:=wdAlignPageNumberCenter, FirstPage:=True

With ActiveDocument.Sections(1).Footers(wdHeaderFooterPrimary) '进入页脚编辑状态
.Range.Font.Size = 12
.Range.Font.Name = "仿宋"
.Range.Collapse Direction:=wdCollapseEnd
End With

End Sub



Sub 多级列表编号变成黑块()

For Each templ In ActiveDocument.ListTemplates

For Each lev In templ.ListLevels

lev.Font.Reset

Next lev

Next templ
End Sub
'-------------------------------------------------------------------------------------





Sub 用时()
Dim t
    t = Timer
 MsgBox " " & Round(Timer - t, 2) & " 秒！", vbOKOnly + vbExclamation, "计算宏运行所用时间"
End Sub


















 Sub 清除空行，空格()
'   清除空行，空格
    
    Dim i As Paragraph, n As Long
    Application.ScreenUpdating = False
    For Each i In ActiveDocument.Paragraphs
    If Len(i.Range) = 1 Then
    i.Range.Delete
    n = n + 1
    End If
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
    .Text = "　"
    .Replacement.Text = ""
    .Wrap = wdFindContinue
    End With
    With Selection.Find
    .Text = "vbTab"
    .Replacement.Text = ""
    .Wrap = wdFindContinue
    End With
    With Selection.Find
    .Text = " "
    .Replacement.Text = ""
    .Wrap = wdFindContinue
    End With
    With Selection.Find
        .Text = "^t"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = True
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute Replace:=wdReplaceAll
    Next
    Application.ScreenUpdating = True
    Options.AutoFormatAsYouTypeDeleteAutoSpaces = True
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = " "
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = True
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute Replace:=wdReplaceAll
    
    Selection.WholeStory
    With ActiveDocument.Styles(wdStyleNormal).Font
        If .NameFarEast = .NameAscii Then
            .NameAscii = ""
        End If
        .NameFarEast = ""
    End With
End Sub







 








Sub AutoFormat()
    ' 定义页面设置
    With ActiveDocument.PageSetup
        .PageWidth = InchesToPoints(8.27)
        .PageHeight = InchesToPoints(11.69)
        .LeftMargin = InchesToPoints(1)
        .RightMargin = InchesToPoints(1)
        .TopMargin = InchesToPoints(1)
        .BottomMargin = InchesToPoints(1)
        .Orientation = wdOrientPortrait
        .HeaderDistance = InchesToPoints(0.5)
        .FooterDistance = InchesToPoints(0.5)
        .Gutter = 0
        .MirrorMargins = False
        .TwoPagesOnOne = False
        .BookFoldPrinting = False
        .BookFoldRevPrinting = False
     
       
        .GutterPos = wdGutterPosLeft
    End With
    
    ' 设置字体、段落格式等
    With ActiveDocument.Content.Font
        .Name = "Calibri"
        .Size = 12
    End With
    With ActiveDocument.Content.ParagraphFormat
        .LineSpacingRule = wdLineSpaceMultiple
        .LineSpacing = 1.5
        .SpaceBefore = 0
        .SpaceAfter = 10
        .Alignment = wdAlignParagraphJustify
        .WidowControl = True
        .KeepWithNext = False
        .KeepTogether = False
        .PageBreakBefore = False
        .NoLineNumber = False
        .Hyphenation = True
        .FirstLineIndent = InchesToPoints(0.5)
        .OutlineLevel = wdOutlineLevelBodyText
    End With
    
 
    

    
    ' 调整行距
    ActiveDocument.Content.Paragraphs.LineSpacing = LinesToPoints(1.5)
    
    ' 添加页眉和页脚
    Dim MySections As Sections
    Dim i As Integer
    Set MySections = ActiveDocument.Sections
    For i = 1 To MySections.Count
        With MySections(i)
            .Headers(wdHeaderFooterPrimary).Range.Text = "我的页眉" ' 修改为实际的页眉内容
            .Footers(wdHeaderFooterPrimary).Range.Text = "第 " & i & " 页" ' 添加页码信息
        End With
    Next i
    


    Dim para As Paragraph
    
    For Each para In ActiveDocument.Paragraphs
        If para.Style = "标题 1" Then
            para.Range.ListFormat.ApplyListTemplateWithLevel listTemplate:= _
                ListGalleries(wdOutlineNumberGallery).ListTemplates(1), _
                ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                DefaultListBehavior:=wdWord10ListBehavior
        ElseIf para.Style = "标题 2" Then
            para.Range.ListFormat.ApplyListTemplateWithLevel listTemplate:= _
                ListGalleries(wdOutlineNumberGallery).ListTemplates(2), _
                ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                DefaultListBehavior:=wdWord10ListBehavior
        ElseIf para.Style = "标题 3" Then
            para.Range.ListFormat.ApplyListTemplateWithLevel listTemplate:= _
                ListGalleries(wdOutlineNumberGallery).ListTemplates(3), _
                ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                DefaultListBehavior:=wdWord10ListBehavior
        ElseIf para.Style = "标题 4" Then
            para.Range.ListFormat.ApplyListTemplateWithLevel listTemplate:= _
                ListGalleries(wdOutlineNumberGallery).ListTemplates(4), _
                ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                DefaultListBehavior:=wdWord10ListBehavior
        ElseIf para.Style = "标题 5" Then
            para.Range.ListFormat.ApplyListTemplateWithLevel listTemplate:= _
                ListGalleries(wdOutlineNumberGallery).ListTemplates(5), _
                ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                DefaultListBehavior:=wdWord10ListBehavior
        End If
    Next para
End Sub

    
Sub 规范标点()
    全角字母数字转半角
    半角标点转全角
    With ActiveDocument.Content.Find
        .Execute "([ 　^s^t]@)([、.．])", , , 1, , , , , , "\2", 2
        .Execute "(^12)^13", , , 1, , , , , , "\1", 2
        .Execute "(^13) ", , , , , , , , , "\1", 2

        .Execute "([0-9０-９])、", , , 1, , , , , , "\1．", 2
        .Execute "([0-9０-９]).([一-﨩])", , , 1, , , , , , "\1．\2", 2
        .Execute "(^13[0-9０-９]{1,}).", , , 1, , , , , , "\1．", 2

        .Execute "([0-9０-９])：([0-9０-９])", , , 1, , , , , , "\1:\2", 2
        .Execute "([0-9０-９])，([0-9０-９])", , , 1, , , , , , "\1,\2", 2
        .Execute "([0-9０-９])。([0-9０-９])", , , 1, , , , , , "\1.\2", 2

        .Execute "([二一])([零〇○0Oo])(??年)", , , 1, , , , , , "\1〇\3", 2
        .Execute "([二一]?)([零〇○0Oo])(?年)", , , 1, , , , , , "\1〇\3", 2
        .Execute "([二一]??)([零〇○0Oo])(年)", , , 1, , , , , , "\1〇\3", 2
        .Execute "?([0-9０-９]{4})(?)([0-9０-９]@号)", , , 1, , , , , , "〔\1〕\3", 2
        .Execute "(^13联)(系)(人：*^13?[一-﨩][一-﨩][一-﨩]：)", , , 1, , , , , , "\1 \2 \3", 2

        .Execute "[：:] ", , , , , , , , , "：", 2
        .Execute "）^9", , , , , , , , , "）", 2
        .Execute " (“)", , , 1, , , , , , "\1", 2
        .Execute "(”) ", , , 1, , , , , , "\1", 2
        .Execute "(》)(《)", , , 1, , , , , , "\1、\2", 2
        .Execute "(。)(（*）)(^13)", , , 1, , , , , , "\2\1\3", 2
    End With
End Sub

Sub 格式调整()
    '设置页面布局
    With ActiveDocument.PageSetup
        .Orientation = wdOrientLandscape '设置为横向纸张
        .TopMargin = CentimetersToPoints(2) '设置上边距为2厘米
        .BottomMargin = CentimetersToPoints(2) '设置下边距为2厘米
        .LeftMargin = CentimetersToPoints(3) '设置左边距为3厘米
        .RightMargin = CentimetersToPoints(3) '设置右边距为3厘米
        .Gutter = 0 '设置装订线为0
        .HeaderDistance = CentimetersToPoints(1.25) '设置页眉距离为1.25厘米
        .FooterDistance = CentimetersToPoints(1.25) '设置页脚距离为1.25厘米
        .PageWidth = CentimetersToPoints(29.7) '设置页面宽度为29.7厘米(A4纸)
        .PageHeight = CentimetersToPoints(21) '设置页面高度为21厘米(A4纸)
    End With
   
    '设置段落间距
    With ActiveDocument.Paragraphs
        .LineSpacingRule = wdLineSpaceExactly '设置为固定行距
        .LineSpacing = LinesToPoints(1.5) '设置行距为1.5倍行距
        .SpaceBefore = 0 '设置段前距为0
        .SpaceAfter = 0 '设置段后距为0
    End With
    
End Sub

Sub 表格()

Application.Browser.Target = wdBrowseTable
Dim tbl As Table
For Each tbl In ActiveDocument.Tables

    With tbl
        '表格外边框
        .Borders.OutsideLineStyle = wdLineStyleSingle
        '表格内边框
        .Borders.InsideLineStyle = wdLineStyleSingle
        '表格内边框颜色
        .Borders(wdBorderRight).Color = wdColorAutomatic
        .Borders(wdBorderLeft).Color = wdColorAutomatic
        .Borders(wdBorderTop).Color = wdColorAutomatic
        .Borders(wdBorderBottom).Color = wdColorAutomatic
        
        '表格居中
        .Rows.Alignment = wdAlignRowCenter
        
        '表格内容居中
        .Range.Paragraphs.Alignment = wdAlignParagraphLeft
        
        '设置字体
        With .Range.Font
            .Name = "楷体"
            .Size = "10.5"
            .ColorIndex = wdBlack
            .Bold = False
        End With
    End With
    
    '设置段落格式
    With tbl.Range.ParagraphFormat
        .LeftIndent = CentimetersToPoints(0) '首行缩进设为 0
        .CharacterUnitLeftIndent = 0 '首行缩进设为 0
        .Alignment = wdAlignParagraphLeft '左对齐
    End With
    
Next tbl
End Sub

Sub SetHeadingsToListLevels()


' SetStyles 宏
' 将标题1-6样式设置为国标的字体和大小，其他标题和正文改为正文字体。
'


'
' SetFormat 宏
' 设置Word公文正文格式排版。
'

    ' 设置页边距
    With ActiveDocument.PageSetup
        .TopMargin = CentimetersToPoints(3)
        .BottomMargin = CentimetersToPoints(2.5)
        .LeftMargin = CentimetersToPoints(3)
        .RightMargin = CentimetersToPoints(2.5)
    End With
    
    
    ' 设置段落格式
    With ActiveDocument.Paragraphs.Format
        .Alignment = wdAlignParagraphLeft
        .LineSpacingRule = wdLineSpace1pt5
        .FirstLineIndent = CentimetersToPoints(0.28)
        .SpaceBefore = 0
        .SpaceAfter = 0
    End With
    
    ' 设置标题样式
    With ActiveDocument.Styles("标题 1").Font
        .Name = "黑体"
        .Size = 22
        .Bold = True
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    With ActiveDocument.Styles("标题 2").Font
        .Name = "黑体"
        .Size = 16
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    With ActiveDocument.Styles("标题 3").Font
        .Name = "黑体"
        .Size = 15
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    With ActiveDocument.Styles("标题 4").Font
        .Name = "黑体"
        .Size = 14
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    
    With ActiveDocument.Styles("标题 5").Font
        .Name = "黑体"
        .Size = 12
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    
    With ActiveDocument.Styles("标题 6").Font
        .Name = "黑体"
        .Size = 10
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    With ActiveDocument.Styles("标题 7").Font
        .Name = "黑体"
        .Size = 10
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    With ActiveDocument.Styles("标题 8").Font
        .Name = "黑体"
        .Size = 10
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    With ActiveDocument.Styles("标题 9").Font
        .Name = "黑体"
        .Size = 10
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    
    ' 设置行距
    With ActiveDocument.Styles("正文").ParagraphFormat
        .LineSpacingRule = wdLineSpace1pt5
        .LineSpacing = LinesToPoints(1.5)
    End With
    
    ' 添加页眉
    With ActiveDocument.PageSetup
        .DifferentFirstPageHeaderFooter = True
        .OddAndEvenPagesHeaderFooter = True
        .HeaderDistance = CentimetersToPoints(0.5)
        .FooterDistance = CentimetersToPoints(1)
    End With
    





    ' 定义变量
    Dim i As Integer
    
    ' 遍历所有段落
    For i = 1 To ActiveDocument.Paragraphs.Count
        With ActiveDocument.Paragraphs(i)
            ' 根据样式设置多级列表级别
            Select Case .Style.NameLocal
                Case "Heading 1"
                    .Range.ListFormat.ApplyListTemplateWithLevel _
                      listTemplate:=ListGalleries(wdOutlineNumberGallery) _
                      .ListTemplates(1), ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                      DefaultListBehavior:=wdWord10ListBehavior
                    
                Case "Heading 2"
                    .Range.ListFormat.ApplyListTemplateWithLevel _
                      listTemplate:=ListGalleries(wdOutlineNumberGallery) _
                      .ListTemplates(2), ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                      DefaultListBehavior:=wdWord10ListBehavior
                
                Case "Heading 3"
                    .Range.ListFormat.ApplyListTemplateWithLevel _
                      listTemplate:=ListGalleries(wdOutlineNumberGallery) _
                      .ListTemplates(3), ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                      DefaultListBehavior:=wdWord10ListBehavior
                Case "Heading 4"
                    .Range.ListFormat.ApplyListTemplateWithLevel _
                      listTemplate:=ListGalleries(wdOutlineNumberGallery) _
                      .ListTemplates(4), ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                      DefaultListBehavior:=wdWord10ListBehavior
                Case "Heading 5"
                    .Range.ListFormat.ApplyListTemplateWithLevel _
                      listTemplate:=ListGalleries(wdOutlineNumberGallery) _
                      .ListTemplates(5), ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                      DefaultListBehavior:=wdWord10ListBehavior
                Case "Heading 6"
                    .Range.ListFormat.ApplyListTemplateWithLevel _
                      listTemplate:=ListGalleries(wdOutlineNumberGallery) _
                      .ListTemplates(6), ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                      DefaultListBehavior:=wdWord10ListBehavior
                    
                ' 可以根据需要添加更多的级别
                    
            End Select
        End With
    Next i
End Sub



Sub AdjustTables()
    Dim tbl As Table
    For Each tbl In ActiveDocument.Tables
        With tbl
            '设置表格样式
            .Style = "Table Grid"
            '设置表格对齐方式为居中
            .Rows.Alignment = wdAlignRowCenter
            '设置表格自动调整列宽
            .AutoFitBehavior (wdAutoFitWindow)
            '设置表格内边距
            .LeftPadding = CentimetersToPoints(0.25)
            .RightPadding = CentimetersToPoints(0.25)
            .TopPadding = CentimetersToPoints(0.25)
            .BottomPadding = CentimetersToPoints(0.25)
            '设置表格行间距
            .Spacing = 0
            '设置表格边框颜色和粗细
            .Borders.Enable = True
            .Borders.InsideColor = RGB(191, 191, 191)
            .Borders.OutsideColor = RGB(191, 191, 191)
            .Borders.InsideLineStyle = wdLineStyleSingle
            .Borders.OutsideLineStyle = wdLineStyleSingle
            '设置表格字体
            .Range.Font.Name = "宋体"
            .Range.Font.Size = 10
        End With
    Next tbl
End Sub

Sub 表格处理()
    Dim t As Table, c As Cell, a&, e&, i As Paragraph, j&, k&, x&, y&, z&, u&, v&, s&

    If Selection.Information(12) Then a = 1
    For Each t In ActiveDocument.Tables
        If a = 1 Then Set t = Selection.Tables(1)
        With t
            '取消环绕
            With .Rows
                .WrapAroundText = False
                .Alignment = wdAlignRowLeft
                .LeftIndent = CentimetersToPoints(0)
            End With

            '判断表格是否规则(e=1=规则/e=0=不规则)
            With .Range
                With .Find
                    .Execute "^13", , , , , , , , , "^p", 2
                    .Execute "^11", , , , , , , , , "^p", 2
                End With
                x = .Information(wdEndOfRangeRowNumber)
                y = .Information(wdEndOfRangeColumnNumber)
                z = .Cells.Count
            End With
            If x <> 1 Then
                If z = x * y Then
                    For k = 1 To y
                        For j = 1 To x - 1
                            If .Cell(j + 1, k).Width = .Cell(j, k).Width Then e = 1 Else e = 0
                            If e = 0 Then Exit For
                        Next j
                        If e = 0 Then Exit For
                    Next k
                Else
                    e = 0
                End If
            Else
                e = 1
            End If

            '清除空格
            If Asc(.Range.Next) <> 13 Then .Range.Next.InsertBefore Text:=vbCr
            .Select
            Selection.MoveEnd
            CommandBars.FindControl(ID:=122).Execute
            Selection.Characters.Last.ParagraphFormat.Alignment = wdAlignParagraphJustify
            .Select

            '清除格式
            Selection.ClearFormatting
            With .Range
                With .Font
                    .NameAscii = "Times New Roman"
                    .Size = 12
                    .Kerning = 0
                    .DisableCharacterSpaceGrid = True
                End With
                With .ParagraphFormat
                    .Space1
                    .Alignment = wdAlignParagraphCenter
                    .AutoAdjustRightIndent = False
                    .DisableLineHeightGrid = True
                End With
                .Cells.VerticalAlignment = wdCellAlignVerticalCenter
            End With

            .LeftPadding = CentimetersToPoints(0.19)
            .RightPadding = CentimetersToPoints(0.19)

            .AutoFitBehavior (wdAutoFitContent)
            .Select
            .AutoFitBehavior (wdAutoFitWindow)

            '行高最小值
            With .Rows
                .HeightRule = wdRowHeightAtLeast
                .Height = CentimetersToPoints(0.9)
            End With

            '表头加粗
            If e = 1 Then
                If .Rows.Count >= 2 And .Columns.Count >= 2 Then
                    If Len(.Cell(2, 2).Range) > 2 Then
                        With .Rows(1).Range.Font
                            .NameFarEast = "黑体"
                            .Bold = True
                        End With
                    End If
                End If
            Else
                v = .Columns.Count
                For u = 1 To v
                    If .Range.Cells(u).Range.Information(wdEndOfRangeRowNumber) = .Range.Cells(u + 1).Range.Information(wdEndOfRangeRowNumber) Then
                        s = 1
                    Else
                        s = 0
                        Exit For
                    End If
                    If u + 1 = v Then Exit For
                Next u
                If s = 1 Then
                    For u = 1 To v
                        With .Cell(1, u).Range.Font
                            .NameFarEast = "黑体"
                            .NameAscii = "Times New Roman"
                            .Bold = True
                        End With
                    Next u
                End If
            End If

            '删除单元格空段
            For Each c In .Range.Cells
                For Each i In c.Range.Paragraphs
                    If Asc(i.Range) = 13 And Len(i.Range) = 1 Then i.Range.Delete
                Next
                With c.Range.Paragraphs
                    If .Count > 1 And Len(.Last.Range) = 2 Then .Last.Previous.Range.Characters.Last.Delete
                End With
            Next
        End With
        If a = 1 Then Exit For
    Next
End Sub



要将Word文档中的样式按照标题设置为多级列表的级别，并实现自动排版，可以使用以下宏：

VBA
复制代码
Sub FormatHeadingAsList()
    Dim doc As Document
    Dim sty As Style
    Set doc = ActiveDocument
    
    For Each sty In doc.Styles
        If Left(sty.NameLocal, 7) = "Heading" Then
            With sty.ParagraphFormat
                .LeftIndent = InchesToPoints(0)
                .SpaceBefore = 0
                .SpaceAfter = 6
                .OutlineLevel = CLng(Right(sty.NameLocal, 1))
            End With
        End If
    Next
End Sub
这个宏会遍历文档中的所有样式，如果样式名以“Heading”开头，则将它的段落格式设置为多级列表的级别，从而实现自动排版。

Sub SetMultilevelList()
    Dim objParagraph As Paragraph
    Dim objStyle As Style
    Dim objListTemplate As listTemplate
    
    On Error Resume Next '启用错误处理
    
    For Each objParagraph In ActiveDocument.Paragraphs
        Set objStyle = objParagraph.Range.Style
        
        If Not objStyle Is Nothing Then '检查对象变量是否已分配
            Select Case objStyle.NameLocal
                Case "Heading 1"
                    Set objListTemplate = ListGalleries(wdOutlineNumberGallery).ListTemplates(1)
                    
                Case "Heading 2"
                    Set objListTemplate = ListGalleries(wdOutlineNumberGallery).ListTemplates(2)
                    
                Case "Heading 3"
                    Set objListTemplate = ListGalleries(wdOutlineNumberGallery).ListTemplates(3)
                    
                Case "Heading 4"
                    Set objListTemplate = ListGalleries(wdOutlineNumberGallery).ListTemplates(4)
                    
                Case "Heading 5"
                    Set objListTemplate = ListGalleries(wdOutlineNumberGallery).ListTemplates(5)
                    
                Case "Heading 6"
                    Set objListTemplate = ListGalleries(wdOutlineNumberGallery).ListTemplates(6)
                    
                Case Else '未定义的样式
                    Set objListTemplate = Nothing '设置为空
                    
            End Select
            
            If Not objListTemplate Is Nothing Then '检查对象变量是否已分配
                objParagraph.Range.ListFormat.ApplyListTemplate listTemplate:=objListTemplate, _
                    ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                    DefaultListBehavior:=wdWord10ListBehavior
            End If
            
            Set objListTemplate = Nothing '手动清除对象变量以释放内存
        End If
        
        Set objStyle = Nothing '手动清除对象变量以释放内存
    Next objParagraph
    
    On Error GoTo 0 '禁用错误处理
End Sub

Sub 表格缩行()
    Dim t As Table, c As Cell, a&
    With Selection
        If .Information(12) Then a = 1
        For Each t In ActiveDocument.Tables
            If a = 1 Then Set t = .Tables(1)
            With t.Range.Find
                .Execute "^p", , , , , , , , , "", 2
                .Execute "^l", , , , , , , , , "", 2
                .Execute "^w", , , , , , , , , "", 2
                .Execute "　", , , , , , , , , "", 2
            End With
            For Each c In t.Range.Cells
                c.Range.Select
                .MoveEnd Unit:=wdCharacter, Count:=-1
                With .Font
                    If .Spacing = "9999999" Then .Spacing = 0
                    If .Scaling = "9999999" Then .Scaling = 100
                    If .Parent.Range.ComputeStatistics(statistic:=wdStatisticLines) > 1 Then .Spacing = -0.5
                    Do Until .Parent.Range.ComputeStatistics(statistic:=wdStatisticLines) = 1
                        If .Parent.Range.ComputeStatistics(statistic:=wdStatisticLines) = 0 Then Exit Do
                        .Scaling = .Scaling - 2
                    Loop
                End With
            Next
            If a = 1 Then Exit For
        Next
        .HomeKey 6
    End
Sub 外框加粗()
    Dim t As Table, i&, j&
    If Selection.Information(12) Then i = 1
    For Each t In ActiveDocument.Tables
        If i = 1 Then Set t = Selection.Tables(1)
        For j = 1 To 4
            t.Range.Borders(-j).LineWidth = 12
        Next
        If i = 1 Then Exit For
    Next
End Sub
Sub 删除分节符_表格邮件合并()
    Dim t As Table
    For Each t In ActiveDocument.Tables
        t.Range.Next.InsertParagraphBefore
    Next
    Dim i As Paragraph
    For Each i In ActiveDocument.Paragraphs
        If i.Range Like "*" & Chr(12) Then i.Range.Characters.Last.Delete
    Next
End Sub



Sub ResizePictures()
    Dim pic As InlineShape
    For Each pic In ActiveDocument.InlineShapes
        If Not pic.LockAspectRatio Then
            pic.Height = pic.Height * 0.8
            pic.Width = pic.Width * 0.8
        ElseIf pic.Width > pic.Height Then
            pic.Height = pic.Width * 0.8
        Else
            pic.Width = pic.Height * 0.8
        End If
        pic.Range.ParagraphFormat.Alignment = wdAlignParagraphCenter
    Next
End Sub


Sub ResizeAndCenterImages()
    Dim img As InlineShape
    
    For Each img In ActiveDocument.InlineShapes
        With img
            If .Height > .Width Then ' if it is taller than wide
                .Height = Application.CentimetersToPoints(20.32) ' resize to 20.32 cm (80% of A4)
                .LockAspectRatio = True
            Else ' if it is wider than tall
                .Width = Application.CentimetersToPoints(20.32) ' resize to 20.32 cm (80% of A4)
                .LockAspectRatio = True
            End If
            
            ' center horizontally and vertically
            .Range.ParagraphFormat.Alignment = wdAlignParagraphCenter
            .Range.ParagraphFormat.LineSpacingRule = wdLineSpaceExactly
            .Range.ParagraphFormat.SpaceBefore = 0
            .Range.ParagraphFormat.SpaceAfter = 0
        End With
    Next img
End Sub

Sub AdjustPictures()
    Dim pic As InlineShape
    
    For Each pic In ActiveDocument.InlineShapes
        ' If the picture is wider than it is tall, rotate it 90 degrees
        If pic.Width > pic.Height Then
            pic.Range.Select
            Selection.ShapeRange.IncrementRotation 90
        End If
        
        ' Set the width and height to 70% of the page size
        pic.Width = ActiveDocument.PageSetup.PageWidth * 0.7
        pic.Height = ActiveDocument.PageSetup.PageHeight * 0.7
        
        ' Center the picture horizontally and vertically
        pic.Range.ParagraphFormat.Alignment = wdAlignParagraphCenter
        pic.Range.ParagraphFormat.LineSpacingRule = wdLineSpaceExactly
        pic.Range.ParagraphFormat.LineSpacing = pic.Height
    Next pic
End Sub

Sub ConvertToInline()
    Dim sh As Shape
    For Each sh In ActiveDocument.Shapes
        If sh.Type = msoLinkedPicture Or sh.Type = msoPicture Then
            sh.ConvertToInlineShape
        End If
    Next sh

    Dim img As InlineShape
    
    For Each img In ActiveDocument.InlineShapes
        With img
            If .Height > .Width Then ' if it is taller than wide
                .Height = Application.CentimetersToPoints(20.32) ' resize to 20.32 cm (80% of A4)
                .LockAspectRatio = True
            Else ' if it is wider than tall
                .Width = Application.CentimetersToPoints(20.32) ' resize to 20.32 cm (80% of A4)
                .LockAspectRatio = True
            End If
            
            ' center horizontally and vertically
            .Range.ParagraphFormat.Alignment = wdAlignParagraphCenter
            .Range.ParagraphFormat.LineSpacingRule = wdLineSpaceExactly
            .Range.ParagraphFormat.SpaceBefore = 0
            .Range.ParagraphFormat.SpaceAfter = 0
        End With
    Next img
End Sub




Sub i()
Dim i

On Error Resume Next

For i = 1 To ActiveDocument.InlineShapes.Count

If ActiveDocument.InlineShapes(i).Width > ActiveDocument.InlineShapes(i).Height Then '如果图片的宽度大于高度，则图片为横版，

ActiveDocument.InlineShapes(i).Width = 150 * 2.835 '设置宽度，单位为mm

Else

ActiveDocument.InlineShapes(i).Width = 150 * 2.835 '否则，图片为竖版，设置宽度，单位为mm

End If

Next

End Sub

Sub 完美显示图片表格的普通视图()
'此宏为雨雪霏霏特别奉献的小偏方，欢迎各位朋友测试。
'如果文档中的嵌入式图片、表格显示迟滞、错位，运行此宏，将在普通视图下完美显示它们。


ActiveDocument.PrintPreview
ActiveDocument.ClosePrintPreview
ActiveWindow.View.Type = wdNormalView
End Sub


'-------------------------------------------------------------------------------------
Sub 完美显示图片表格的页面视图()
'此宏为雨雪霏霏特别奉献的小偏方，欢迎各位朋友测试。
'如果文档中的各种图片、表格显示迟滞、错位，运行此宏，将在页面视图下完美显示它们。


ActiveDocument.PrintPreview
ActiveDocument.ClosePrintPreview
ActiveWindow.View.Type = wdNormalView
ActiveWindow.View.Type = wdPrintView
End Sub



    


Sub 投标文件()
Dim t
t = Timer


For Each objStyle In ActiveDocument.Styles
On Error Resume Next
If objStyle.BuiltIn = False And objStyle.InUse = True Then
objStyle.Delete
End If
Next
' 清除格式
Selection.WholeStory
' Selection.ClearParagraphDirectFormatting
On Error Resume Next
Application.ScreenUpdating = False
'

With Selection.PageSetup '页面设置
.TopMargin = CentimetersToPoints(3.7) '顶端边距
.BottomMargin = CentimetersToPoints(3.5) '底端边距
.LeftMargin = CentimetersToPoints(2.8) '左边距
.RightMargin = CentimetersToPoints(2.6) '右边距

'.PageWidth = CentimetersToPoints(21) '页面宽度
'.PageHeight = CentimetersToPoints(29) '页面高度
End With

With Selection.Paragraphs '设置行距
.FirstLineIndent = CentimetersToPoints(0) '取消首行缩进
'.IndentFirstLineCharWidth 2 '首行缩进2个字符
' .Alignment = wdAlignParagraphCenter '段落居中
.Alignment = wdAlignParagraphLeft '左对齐
.LineSpacingRule = wdLineSpaceExactly '行距固定
.LineSpacingRule = wdLineSpace1pt5 '行距固定1pt5
' .LineSpacing = Word.Application.LinesToPoints(2.3) '行距为2.3倍行距 一行距=12

Selection.Range.HighlightColorIndex = wdNoHighlight '突出显示文本取消
End With
With ActiveDocument.Styles(wdStyleHeading1).Font
.Color = wdColorBlack
.Bold = True
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading2).Font
.Color = wdColorBlack
.Bold = True
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading3).Font
.Color = wdColorBlack
.Bold = True
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading4).Font
.Color = wdColorBlack
.Bold = True
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading5).Font
.Color = wdColorBlack
.Bold = True
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading6).Font
.Color = wdColorBlack
.Bold = False
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading7).Font
.Color = wdColorBlack
.Bold = False
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading8).Font
.Color = wdColorBlack
.Bold = False
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleHeading9).Font
.Color = wdColorBlack
.Bold = False
.Size = 14
.Name = "黑体"
End With
With ActiveDocument.Styles(wdStyleNormal).Font
.Color = wdColorBlack
.Bold = False
.Size = 14
.Name = "新宋体"
.ColorIndex = wdBlack
End With

With Selection.Font '字体设置
.Name = "新宋体"
.Size = 12 '号字体
.ColorIndex = wdBlack '黑色
.Bold = False
End With

Application.Browser.Target = wdBrowseTable


For i = 1 To ActiveDocument.Tables.Count

    ActiveDocument.Tables.Item(i).Select

    With Selection

        '表格外边框
        .Borders.OutsideLineStyle = wdLineStyleSingle
        '表格内边框
        .Borders.InsideLineStyle = wdLineStyleSingle
        '表格内边框
        .Borders(wdBorderRight).Color = wdColorAutomatic
        .Borders(wdBorderLeft).Color = wdColorAutomatic
        .Borders(wdBorderTop).Color = wdColorAutomatic
        .Borders(wdBorderBottom).Color = wdColorAutomatic
        '表格居中
        .Rows.Alignment = wdAlignRowCenter
        End With
     Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = "^l"
        .Replacement.Text = "^p"
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = True
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
Next i
   
Selection.Find.Execute Replace:=wdReplaceAll
    '替换非标准引号为标准引号
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = """(*)"""
        .Replacement.Text = ChrW(8220) & "\1" & ChrW(8221)
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = True
    End With
   
    '修改小数点错误
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = "([0-9])。([0-9])"
        .Replacement.Text = "\1.\2"
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = True
    End With

Selection.Find.Execute Replace:=wdReplaceAll
         '去除半角空格
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = " "
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = True
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With

Selection.Find.Execute Replace:=wdReplaceAll
    '去除全角空格
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = "　"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchByte = True
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With

'   清除段落前后空格
    For a = 1 To ActiveDocument.Paragraphs.Count
    Set sutRng = ActiveDocument.Paragraphs(a).Range
    sutRng.MoveEnd wdCharacter, -1
    sutRng.Text = Trim(sutRng.Text)
    sutRng.MoveEnd wdCharacter, 1
    ActiveDocument.Paragraphs(a).Range.Text = sutRng.Text
    Next a
        MsgBox " " & Round(Timer - t, 2) & " 秒！", vbOKOnly + vbExclamation, "计算宏运行所用时间"
End Sub


    
Sub 1AdjustImages()
    Dim pic As Shape
    
    For Each pic In ActiveDocument.Shapes
        If pic.Type = msoPicture Or pic.Type = msoLinkedPicture Then
            '检查图像方向
            If pic.Height > pic.Width Then
                pic.Rotation = 90
            End If

            '调整图像大小
            Dim targetWidth As Long, targetHeight As Long
            targetWidth = Application.InchesToPoints(ActiveDocument.PageSetup.PageWidth) * 0.7
            targetHeight = Application.InchesToPoints(ActiveDocument.PageSetup.PageHeight) * 0.7
            If pic.Width > targetWidth Or pic.Height > targetHeight Then
                pic.LockAspectRatio = msoFalse
                If pic.Width / pic.Height >= targetWidth / targetHeight Then
                    pic.Width = targetWidth
                Else
                    pic.Height = targetHeight
                End If
                pic.LockAspectRatio = msoTrue
            End If

            '居中图像
            pic.Left = (ActiveDocument.PageSetup.PageWidth - pic.Width) / 2
            pic.Top = (ActiveDocument.PageSetup.PageHeight - pic.Height) / 2
        End If
    Next pic
End Sub

Sub 2ResizePictures()
    Dim pic As InlineShape
    For Each pic In ActiveDocument.InlineShapes
        If Not pic.LockAspectRatio Then
            pic.Height = pic.Height * 0.8
            pic.Width = pic.Width * 0.8
        ElseIf pic.Width > pic.Height Then
            pic.Height = pic.Width * 0.8
        Else
            pic.Width = pic.Height * 0.8
        End If
        pic.Range.ParagraphFormat.Alignment = wdAlignParagraphCenter
    Next
End Sub


Sub 3ResizeAndCenterImages()
    Dim img As InlineShape
    
    For Each img In ActiveDocument.InlineShapes
        With img
            If .Height > .Width Then ' if it is taller than wide
                .Height = Application.CentimetersToPoints(20.32) ' resize to 20.32 cm (80% of A4)
                .LockAspectRatio = True
            Else ' if it is wider than tall
                .Width = Application.CentimetersToPoints(20.32) ' resize to 20.32 cm (80% of A4)
                .LockAspectRatio = True
            End If
            
            ' center horizontally and vertically
            .Range.ParagraphFormat.Alignment = wdAlignParagraphCenter
            .Range.ParagraphFormat.LineSpacingRule = wdLineSpaceExactly
            .Range.ParagraphFormat.SpaceBefore = 0
            .Range.ParagraphFormat.SpaceAfter = 0
        End With
    Next img
End Sub

Sub 4AdjustPictures()
    Dim pic As InlineShape
    
    For Each pic In ActiveDocument.InlineShapes
        ' If the picture is wider than it is tall, rotate it 90 degrees
        If pic.Width > pic.Height Then
            pic.Range.Select
            Selection.ShapeRange.IncrementRotation 90
        End If
        
        ' Set the width and height to 70% of the page size
        pic.Width = ActiveDocument.PageSetup.PageWidth * 0.7
        pic.Height = ActiveDocument.PageSetup.PageHeight * 0.7
        
        ' Center the picture horizontally and vertically
        pic.Range.ParagraphFormat.Alignment = wdAlignParagraphCenter
        pic.Range.ParagraphFormat.LineSpacingRule = wdLineSpaceExactly
        pic.Range.ParagraphFormat.LineSpacing = pic.Height
    Next pic
End Sub

Sub 5ConvertToInline()
    Dim sh As Shape
    For Each sh In ActiveDocument.Shapes
        If sh.Type = msoLinkedPicture Or sh.Type = msoPicture Then
            sh.ConvertToInlineShape
        End If
    Next sh

    Dim img As InlineShape
    
    For Each img In ActiveDocument.InlineShapes
        With img
            If .Height > .Width Then ' if it is taller than wide
                .Height = Application.CentimetersToPoints(20.32) ' resize to 20.32 cm (80% of A4)
                .LockAspectRatio = True
            Else ' if it is wider than tall
                .Width = Application.CentimetersToPoints(20.32) ' resize to 20.32 cm (80% of A4)
                .LockAspectRatio = True
            End If
            
            ' center horizontally and vertically
            .Range.ParagraphFormat.Alignment = wdAlignParagraphCenter
            .Range.ParagraphFormat.LineSpacingRule = wdLineSpaceExactly
            .Range.ParagraphFormat.SpaceBefore = 0
            .Range.ParagraphFormat.SpaceAfter = 0
        End With
    Next img
End Sub
Sub 6ConvertToInline()
    Dim sh As Shape
    For Each sh In ActiveDocument.Shapes
        If sh.Type = msoLinkedPicture Or sh.Type = msoPicture Then
            sh.ConvertToInlineShape
        End If
    Next sh

    Dim img As InlineShape
    
    For Each img In ActiveDocument.InlineShapes
        With img
            If .Height > .Width Then ' if it is taller than wide
                .Height = Application.CentimetersToPoints(20.32) ' resize to 20.32 cm (80% of A4)
                .LockAspectRatio = True
            Else ' if it is wider than tall
                .Width = Application.CentimetersToPoints(20.32) ' resize to 20.32 cm (80% of A4)
                .LockAspectRatio = True
            End If
            
            ' center horizontally and vertically
            .Range.ParagraphFormat.Alignment = wdAlignParagraphCenter
            .Range.ParagraphFormat.LineSpacingRule = wdLineSpaceExactly
            .Range.ParagraphFormat.SpaceBefore = 0
            .Range.ParagraphFormat.SpaceAfter = 0
        End With
    Next img
End Sub



Sub 7img()
Dim i

On Error Resume Next

For i = 1 To ActiveDocument.InlineShapes.Count

If ActiveDocument.InlineShapes(i).Width > ActiveDocument.InlineShapes(i).Height Then '如果图片的宽度大于高度，则图片为横版，

ActiveDocument.InlineShapes(i).Width = 150 * 2.835 '设置宽度，单位为mm

Else

ActiveDocument.InlineShapes(i).Width = 150 * 2.835 '否则，图片为竖版，设置宽度，单位为mm

End If

Next

End Sub

Sub 1表格()

Application.Browser.Target = wdBrowseTable
Dim tbl As Table
For Each tbl In ActiveDocument.Tables

    With tbl
        '表格外边框
        .Borders.OutsideLineStyle = wdLineStyleSingle
        '表格内边框
        .Borders.InsideLineStyle = wdLineStyleSingle
        '表格内边框颜色
        .Borders(wdBorderRight).Color = wdColorAutomatic
        .Borders(wdBorderLeft).Color = wdColorAutomatic
        .Borders(wdBorderTop).Color = wdColorAutomatic
        .Borders(wdBorderBottom).Color = wdColorAutomatic
        
        '表格居中
        .Rows.Alignment = wdAlignRowCenter
        
        '表格内容居中
        .Range.Paragraphs.Alignment = wdAlignParagraphLeft
        
        '设置字体
        With .Range.Font
            .Name = "楷体"
            .Size = "10.5"
            .ColorIndex = wdBlack
            .Bold = False
        End With
    End With
    
    '设置段落格式
    With tbl.Range.ParagraphFormat
        .LeftIndent = CentimetersToPoints(0) '首行缩进设为 0
        .CharacterUnitLeftIndent = 0 '首行缩进设为 0
        .Alignment = wdAlignParagraphLeft '左对齐
    End With
    
Next tbl
End Sub





Sub 2AdjustTables()
    Dim tbl As Table
    For Each tbl In ActiveDocument.Tables
        With tbl
            '设置表格样式
            .Style = "Table Grid"
            '设置表格对齐方式为居中
            .Rows.Alignment = wdAlignRowCenter
            '设置表格自动调整列宽
            .AutoFitBehavior (wdAutoFitWindow)
            '设置表格内边距
            .LeftPadding = CentimetersToPoints(0.25)
            .RightPadding = CentimetersToPoints(0.25)
            .TopPadding = CentimetersToPoints(0.25)
            .BottomPadding = CentimetersToPoints(0.25)
            '设置表格行间距
            .Spacing = 0
            '设置表格边框颜色和粗细
            .Borders.Enable = True
            .Borders.InsideColor = RGB(191, 191, 191)
            .Borders.OutsideColor = RGB(191, 191, 191)
            .Borders.InsideLineStyle = wdLineStyleSingle
            .Borders.OutsideLineStyle = wdLineStyleSingle
            '设置表格字体
            .Range.Font.Name = "宋体"
            .Range.Font.Size = 10
        End With
    Next tbl
End Sub

Sub 3表格处理()
    Dim t As Table, c As Cell, a&, e&, i As Paragraph, j&, k&, x&, y&, z&, u&, v&, s&

    If Selection.Information(12) Then a = 1
    For Each t In ActiveDocument.Tables
        If a = 1 Then Set t = Selection.Tables(1)
        With t
            '取消环绕
            With .Rows
                .WrapAroundText = False
                .Alignment = wdAlignRowLeft
                .LeftIndent = CentimetersToPoints(0)
            End With

            '判断表格是否规则(e=1=规则/e=0=不规则)
            With .Range
                With .Find
                    .Execute "^13", , , , , , , , , "^p", 2
                    .Execute "^11", , , , , , , , , "^p", 2
                End With
                x = .Information(wdEndOfRangeRowNumber)
                y = .Information(wdEndOfRangeColumnNumber)
                z = .Cells.Count
            End With
            If x <> 1 Then
                If z = x * y Then
                    For k = 1 To y
                        For j = 1 To x - 1
                            If .Cell(j + 1, k).Width = .Cell(j, k).Width Then e = 1 Else e = 0
                            If e = 0 Then Exit For
                        Next j
                        If e = 0 Then Exit For
                    Next k
                Else
                    e = 0
                End If
            Else
                e = 1
            End If

            '清除空格
            If Asc(.Range.Next) <> 13 Then .Range.Next.InsertBefore Text:=vbCr
            .Select
            Selection.MoveEnd
            CommandBars.FindControl(ID:=122).Execute
            Selection.Characters.Last.ParagraphFormat.Alignment = wdAlignParagraphJustify
            .Select

            '清除格式
            Selection.ClearFormatting
            With .Range
                With .Font
                    .NameAscii = "Times New Roman"
                    .Size = 12
                    .Kerning = 0
                    .DisableCharacterSpaceGrid = True
                End With
                With .ParagraphFormat
                    .Space1
                    .Alignment = wdAlignParagraphCenter
                    .AutoAdjustRightIndent = False
                    .DisableLineHeightGrid = True
                End With
                .Cells.VerticalAlignment = wdCellAlignVerticalCenter
            End With

            .LeftPadding = CentimetersToPoints(0.19)
            .RightPadding = CentimetersToPoints(0.19)

            .AutoFitBehavior (wdAutoFitContent)
            .Select
            .AutoFitBehavior (wdAutoFitWindow)

            '行高最小值
            With .Rows
                .HeightRule = wdRowHeightAtLeast
                .Height = CentimetersToPoints(0.9)
            End With

            '表头加粗
            If e = 1 Then
                If .Rows.Count >= 2 And .Columns.Count >= 2 Then
                    If Len(.Cell(2, 2).Range) > 2 Then
                        With .Rows(1).Range.Font
                            .NameFarEast = "黑体"
                            .Bold = True
                        End With
                    End If
                End If
            Else
                v = .Columns.Count
                For u = 1 To v
                    If .Range.Cells(u).Range.Information(wdEndOfRangeRowNumber) = .Range.Cells(u + 1).Range.Information(wdEndOfRangeRowNumber) Then
                        s = 1
                    Else
                        s = 0
                        Exit For
                    End If
                    If u + 1 = v Then Exit For
                Next u
                If s = 1 Then
                    For u = 1 To v
                        With .Cell(1, u).Range.Font
                            .NameFarEast = "黑体"
                            .NameAscii = "Times New Roman"
                            .Bold = True
                        End With
                    Next u
                End If
            End If

            '删除单元格空段
            For Each c In .Range.Cells
                For Each i In c.Range.Paragraphs
                    If Asc(i.Range) = 13 And Len(i.Range) = 1 Then i.Range.Delete
                Next
                With c.Range.Paragraphs
                    If .Count > 1 And Len(.Last.Range) = 2 Then .Last.Previous.Range.Characters.Last.Delete
                End With
            Next
        End With
        If a = 1 Then Exit For
    Next
End Sub





Sub 4表格缩行()
    Dim t As Table, c As Cell, a&
    With Selection
        If .Information(12) Then a = 1
        For Each t In ActiveDocument.Tables
            If a = 1 Then Set t = .Tables(1)
            With t.Range.Find
                .Execute "^p", , , , , , , , , "", 2
                .Execute "^l", , , , , , , , , "", 2
                .Execute "^w", , , , , , , , , "", 2
                .Execute "　", , , , , , , , , "", 2
            End With
            For Each c In t.Range.Cells
                c.Range.Select
                .MoveEnd Unit:=wdCharacter, Count:=-1
                With .Font
                    If .Spacing = "9999999" Then .Spacing = 0
                    If .Scaling = "9999999" Then .Scaling = 100
                    If .Parent.Range.ComputeStatistics(statistic:=wdStatisticLines) > 1 Then .Spacing = -0.5
                    Do Until .Parent.Range.ComputeStatistics(statistic:=wdStatisticLines) = 1
                        If .Parent.Range.ComputeStatistics(statistic:=wdStatisticLines) = 0 Then Exit Do
                        .Scaling = .Scaling - 2
                    Loop
                End With
            Next
            If a = 1 Then Exit For
        Next
        .HomeKey 6
    End 
Sub 5外框加粗()
    Dim t As Table, i&, j&
    If Selection.Information(12) Then i = 1
    For Each t In ActiveDocument.Tables
        If i = 1 Then Set t = Selection.Tables(1)
        For j = 1 To 4
            t.Range.Borders(-j).LineWidth = 12
        Next
        If i = 1 Then Exit For
    Next
End Sub
Sub 6删除分节符_表格邮件合并()
    Dim t As Table
    For Each t In ActiveDocument.Tables
        t.Range.Next.InsertParagraphBefore
    Next
    Dim i As Paragraph
    For Each i In ActiveDocument.Paragraphs
        If i.Range Like "*" & Chr(12) Then i.Range.Characters.Last.Delete
    Next
End Sub

Sub 1SetHeadingsToListLevels()


' SetStyles 宏
' 将标题1-6样式设置为国标的字体和大小，其他标题和正文改为正文字体。
'


'
' SetFormat 宏
' 设置Word公文正文格式排版。
'

    ' 设置页边距
    With ActiveDocument.PageSetup
        .TopMargin = CentimetersToPoints(3)
        .BottomMargin = CentimetersToPoints(2.5)
        .LeftMargin = CentimetersToPoints(3)
        .RightMargin = CentimetersToPoints(2.5)
    End With
    
    
    ' 设置段落格式
    With ActiveDocument.Paragraphs.Format
        .Alignment = wdAlignParagraphLeft
        .LineSpacingRule = wdLineSpace1pt5
        .FirstLineIndent = CentimetersToPoints(0.28)
        .SpaceBefore = 0
        .SpaceAfter = 0
    End With
    
    ' 设置标题样式
    With ActiveDocument.Styles("标题 1").Font
        .Name = "黑体"
        .Size = 22
        .Bold = True
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    With ActiveDocument.Styles("标题 2").Font
        .Name = "黑体"
        .Size = 16
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    With ActiveDocument.Styles("标题 3").Font
        .Name = "黑体"
        .Size = 15
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    With ActiveDocument.Styles("标题 4").Font
        .Name = "黑体"
        .Size = 14
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    
    With ActiveDocument.Styles("标题 5").Font
        .Name = "黑体"
        .Size = 12
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    
    With ActiveDocument.Styles("标题 6").Font
        .Name = "黑体"
        .Size = 10
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    With ActiveDocument.Styles("标题 7").Font
        .Name = "黑体"
        .Size = 10
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    With ActiveDocument.Styles("标题 8").Font
        .Name = "黑体"
        .Size = 10
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    With ActiveDocument.Styles("标题 9").Font
        .Name = "黑体"
        .Size = 10
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With
    
    ' 设置行距
    With ActiveDocument.Styles("正文").ParagraphFormat
        .LineSpacingRule = wdLineSpace1pt5
        .LineSpacing = LinesToPoints(1.5)
    End With
    
    ' 添加页眉
    With ActiveDocument.PageSetup
        .DifferentFirstPageHeaderFooter = True
        .OddAndEvenPagesHeaderFooter = True
        .HeaderDistance = CentimetersToPoints(0.5)
        .FooterDistance = CentimetersToPoints(1)
    End With
     ' 定义变量
    Dim i As Integer
    
    ' 遍历所有段落
    For i = 1 To ActiveDocument.Paragraphs.Count
        With ActiveDocument.Paragraphs(i)
            ' 根据样式设置多级列表级别
            Select Case .Style.NameLocal
                Case "Heading 1"
                    .Range.ListFormat.ApplyListTemplateWithLevel _
                      listTemplate:=ListGalleries(wdOutlineNumberGallery) _
                      .ListTemplates(1), ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                      DefaultListBehavior:=wdWord10ListBehavior
                    
                Case "Heading 2"
                    .Range.ListFormat.ApplyListTemplateWithLevel _
                      listTemplate:=ListGalleries(wdOutlineNumberGallery) _
                      .ListTemplates(2), ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                      DefaultListBehavior:=wdWord10ListBehavior
                
                Case "Heading 3"
                    .Range.ListFormat.ApplyListTemplateWithLevel _
                      listTemplate:=ListGalleries(wdOutlineNumberGallery) _
                      .ListTemplates(3), ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                      DefaultListBehavior:=wdWord10ListBehavior
                Case "Heading 4"
                    .Range.ListFormat.ApplyListTemplateWithLevel _
                      listTemplate:=ListGalleries(wdOutlineNumberGallery) _
                      .ListTemplates(4), ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                      DefaultListBehavior:=wdWord10ListBehavior
                Case "Heading 5"
                    .Range.ListFormat.ApplyListTemplateWithLevel _
                      listTemplate:=ListGalleries(wdOutlineNumberGallery) _
                      .ListTemplates(5), ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                      DefaultListBehavior:=wdWord10ListBehavior
                Case "Heading 6"
                    .Range.ListFormat.ApplyListTemplateWithLevel _
                      listTemplate:=ListGalleries(wdOutlineNumberGallery) _
                      .ListTemplates(6), ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                      DefaultListBehavior:=wdWord10ListBehavior
                    
                ' 可以根据需要添加更多的级别
                    
            End Select
        End With
    Next i
End Sub


要将Word文档中的样式按照标题设置为多级列表的级别，并实现自动排版，可以使用以下宏：

VBA
复制代码
Sub 2FormatHeadingAsList()
    Dim doc As Document
    Dim sty As Style
    Set doc = ActiveDocument
    
    For Each sty In doc.Styles
        If Left(sty.NameLocal, 7) = "Heading" Then
            With sty.ParagraphFormat
                .LeftIndent = InchesToPoints(0)
                .SpaceBefore = 0
                .SpaceAfter = 6
                .OutlineLevel = CLng(Right(sty.NameLocal, 1))
            End With
        End If
    Next
End Sub
这个宏会遍历文档中的所有样式，如果样式名以“Heading”开头，则将它的段落格式设置为多级列表的级别，从而实现自动排版。

Sub 3SetMultilevelList()
    Dim objParagraph As Paragraph
    Dim objStyle As Style
    Dim objListTemplate As listTemplate
    
    On Error Resume Next '启用错误处理
    
    For Each objParagraph In ActiveDocument.Paragraphs
        Set objStyle = objParagraph.Range.Style
        
        If Not objStyle Is Nothing Then '检查对象变量是否已分配
            Select Case objStyle.NameLocal
                Case "Heading 1"
                    Set objListTemplate = ListGalleries(wdOutlineNumberGallery).ListTemplates(1)
                    
                Case "Heading 2"
                    Set objListTemplate = ListGalleries(wdOutlineNumberGallery).ListTemplates(2)
                    
                Case "Heading 3"
                    Set objListTemplate = ListGalleries(wdOutlineNumberGallery).ListTemplates(3)
                    
                Case "Heading 4"
                    Set objListTemplate = ListGalleries(wdOutlineNumberGallery).ListTemplates(4)
                    
                Case "Heading 5"
                    Set objListTemplate = ListGalleries(wdOutlineNumberGallery).ListTemplates(5)
                    
                Case "Heading 6"
                    Set objListTemplate = ListGalleries(wdOutlineNumberGallery).ListTemplates(6)
                    
                Case Else '未定义的样式
                    Set objListTemplate = Nothing '设置为空
                    
            End Select
            
            If Not objListTemplate Is Nothing Then '检查对象变量是否已分配
                objParagraph.Range.ListFormat.ApplyListTemplate listTemplate:=objListTemplate, _
                    ContinuePreviousList:=False, ApplyTo:=wdListApplyToWholeList, _
                    DefaultListBehavior:=wdWord10ListBehavior
            End If
            
            Set objListTemplate = Nothing '手动清除对象变量以释放内存
        End If
        
        Set objStyle = Nothing '手动清除对象变量以释放内存
    Next objParagraph
    
    On Error GoTo 0 '禁用错误处理
End Sub
